{"version":3,"sources":["framework/sidebar/BarIconButton.tsx","framework/sidebar/Sidebar.tsx","framework/menuarea/MenuArea.tsx","framework/ConsoleBar/ConsoleBar.tsx","engine/buffer.js","engine/renderer.js","engine/geometry.js","framework/mainarea/IconButton.tsx","engine/material.js","framework/mainarea/CodePage.tsx","engine/mesh.js","framework/mainarea/PageTabs.tsx","framework/mainarea/MainArea.tsx","framework/rightside/RightSide.tsx","App.tsx","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx","framework/ConsoleBar/ConsoleBar.module.css","framework/sidebar/Sidebar.module.css","framework/sidebar/IconButton.module.css","framework/menuarea/MenuArea.module.css","framework/mainarea/MainArea.module.css","framework/mainarea/IconButton.module.css","framework/mainarea/Tabs.module.css","framework/rightside/RightSide.module.css"],"names":["BarIconButton","props","placement","title","tip","mouseEnterDelay","className","styles","iconbutton","onClick","style","icon","Sidebar","sidebar","GithubOutlined","fontSize","MenuArea","setMsgOut","menuarea","F32Buffer","device","data","usage","this","elementSize","BYTES_PER_ELEMENT","gpuBuffer","createBuffer","size","byteLength","mappedAtCreation","Float32Array","getMappedRange","set","unmap","swapChainFormat","renderPassDescriptor","colorAttachments","attachment","loadValue","r","g","b","a","Renderer","canvas","context","getContext","swapChain","configureSwapChain","format","commandEncoder","createCommandEncoder","textureView","getCurrentTexture","createView","passEncoder","beginRenderPass","endPass","queue","submit","finish","mesh","mouseArray","pipeline","updatePipeline","writeBuffer","uniformBuffer","buffer","byteOffset","setBindGroup","uniformBindGroup","setPipeline","i","geometry","nodes","length","setVertexBuffer","draw","defaultOpt","stride","offset","GeometryNode","name","options","shaderLocation","arrayStride","attributes","Geometry","type","IconButton","ConsoleBar","useState","msg","setMsg","consolebar","titleline","StopOutlined","float","messagebox","split","map","line","index","DEBUG","source","pushErrorScope","shaderModule","createShaderModule","code","popErrorScope","then","err","message","material","Material","vs","fs","vertexStage","module","entryPoint","fragmentStage","window","stage","console","log","Mesh","geo","createUniform","GPUBufferUsage","UNIFORM","COPY_DST","bindGroupLayout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","FRAGMENT","vbufferConfig","push","toPipelineBuffer","pipelineLayout","createPipelineLayout","bindGroupLayouts","createRenderPipeline","layout","primitiveTopology","colorStates","vertexState","vertexBuffers","createBindGroup","getBindGroupLayout","resource","f32BufferArray","frame","renderer","clear","performance","now","render","end","requestAnimationFrame","navigator","gpu","requestAdapter","adapter","Error","requestDevice","verticesData","verticesBuffer","VERTEX","vnode","wgslShaders","vertex","fragment","fff","fIndex","renderCanvasMouseMove","event","offsetX","offsetY","updateMaterialShader","changeFS","cancelAnimationFrame","hasCanvas","setInterval","document","getElementById","addEventListener","clearInterval","init","handleEditorBeforeMount","monaco","languages","register","id","setMonarchTokensProvider","comments","lineComment","blockComment","keywords","types","special","symbols","escapes","digits","tokenizer","root","cases","token","whitespace","comment","editor","defineTheme","base","inherit","rules","foreground","registerCompletionItemProvider","provideCompletionItems","suggestions","label","kind","CompletionItemKind","Snippet","insertText","join","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","documentation","CodePage","isCodePage","state","updateCode","setState","noClick","noKeyboard","multiple","onDrop","files","reader","FileReader","readAsText","onload","result","stopPropagation","getRootProps","height","theme","defaultLanguage","defaultValue","value","onChange","beforeMount","Component","TabPane","Tabs","TabTitle","isEdit","inputRef","React","createRef","rename","current","select","finishEdit","changeName","e","target","textSelect","onDel","keyId","onSaveCode","onCopyPage","onCloseOther","onCloseRight","contextMenu","Item","Divider","overlay","trigger","maxLength","onSelect","ref","renameinput","onBlur","PageTabs","newTabIndex","activeKey","panes","forEach","pane","key","onEdit","targetKey","action","add","tabName","Date","newPanes","tmpRef","remove","content","newActiveKey","lastIndex","filter","blob","Blob","BlobDownloader","download","arr","isFind","runCode","f","tabBarExtraContent","CaretRightOutlined","tab","closable","MainArea","RightSide","useResizeDetector","width","rightside","App","primaryIndex","secondaryInitialSize","display","vertical","overflow","counterSlice","createSlice","initialState","reducers","increment","decrement","incrementByAmount","payload","actions","store","configureStore","reducer","counter","counterReducer","Boolean","location","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister","catch","error","exports"],"mappings":"0QAWe,SAASA,EAAcC,GAClC,OACI,cAAC,IAAD,CAASC,UAAU,QAAQC,MAAOF,EAAMG,IAAKC,gBAAiB,EAA9D,SACI,qBAAKC,UAAWC,IAAOC,WAAYC,QAASR,EAAMQ,QAASC,MAAOT,EAAMS,OAAS,GAAjF,SACKT,EAAMU,SCARC,MAVf,WACE,OACE,qBAAKN,UAAWC,IAAOM,QAAvB,SACE,cAACb,EAAD,CAAeW,KAAM,cAACG,EAAA,EAAD,CAAgBJ,MAAO,CAC1CK,SAAU,MACNX,IAAI,oC,2CCCDY,ICNXC,EDMWD,EARf,WACE,OACE,qBAAKV,UAAWC,IAAOW,SAAvB,uB,6IELiBC,EACjB,WAAYC,EAAQC,EAAMC,GAAQ,oBAC9BC,KAAKC,YAAcH,EAAKI,kBACxBF,KAAKG,UAAYN,EAAOO,aAAa,CACjCC,KAAMP,EAAKQ,WACXP,MAAOA,EACPQ,kBAAkB,IAEtB,IAAIC,aAAaR,KAAKG,UAAUM,kBAAkBC,IAAIZ,GACzDE,KAAKG,UAAUQ,SCTdC,EAAkB,aAClBC,EAAuB,CACzBC,iBAAkB,CACd,CACIC,WAAY,KACZC,UAAW,CAAEC,EAAG,EAAKC,EAAG,EAAKC,EAAG,EAAKC,EAAG,MAK/BC,E,WACjB,WAAYxB,EAAQyB,GAAS,oBACzBtB,KAAKH,OAASA,EACdG,KAAKsB,OAASA,EACdtB,KAAKuB,QAAUD,EAAOE,WAAW,cACjCxB,KAAKyB,UAAYzB,KAAKuB,QAAQG,mBAAmB,CAC7C7B,SACA8B,OAAQf,IAEZZ,KAAK2B,OAASf,EACdZ,KAAK4B,eAAiB/B,EAAOgC,uB,yCAGjC,WACI7B,KAAK4B,eAAiB5B,KAAKH,OAAOgC,uBAClC,IAAMC,EAAc9B,KAAKyB,UAAUM,oBAAoBC,aACvDnB,EAAqBC,iBAAiB,GAAGC,WAAae,EAEtD9B,KAAKiC,YAAcjC,KAAK4B,eAAeM,gBAAgBrB,K,iBAG3D,WACIb,KAAKiC,YAAYE,UAEjBnC,KAAKH,OAAOuC,MAAMC,OAAO,CAACrC,KAAK4B,eAAeU,a,oBAGlD,SAAOC,EAAMC,GACT,IAAIC,EAAWF,EAAKE,UAAYF,EAAKG,iBAAiBD,SAEtDzC,KAAKH,OAAOuC,MAAMO,YACdJ,EAAKK,cACL,EACAJ,EAAWK,OACXL,EAAWM,WACXN,EAAWlC,YAGfN,KAAKiC,YAAYc,aAAa,EAAGR,EAAKS,kBACtChD,KAAKiC,YAAYgB,YAAYR,GAC7B,IAAK,IAAIS,EAAI,EAAGA,EAAIX,EAAKY,SAASC,MAAMC,OAAQH,IAC5ClD,KAAKiC,YAAYqB,gBAAgBJ,EAAGX,EAAKY,SAASC,MAAMF,GAAGL,OAAO1C,WAGtEH,KAAKiC,YAAYsB,KAAKhB,EAAKY,SAASE,OAAQ,EAAG,EAAG,O,KCtDtDG,EAAa,CACbC,OAAQ,EACRC,OAAQ,EACR/B,OAAQ,aAGCgC,EAAb,WACI,WAAYd,EAAQe,GAA6B,IAAvBC,EAAsB,uDAAZL,EAAY,oBAC5CxD,KAAK4D,KAAOA,EACZ5D,KAAK6C,OAASA,EACd7C,KAAKyD,OAASI,EAAQJ,OACtBzD,KAAK0D,OAASG,EAAQH,OACtB1D,KAAK2B,OAASkC,EAAQlC,OAN9B,oDASI,SAAiBmC,GACb,MAAO,CACHC,YAAa/D,KAAKyD,OAASzD,KAAK6C,OAAO5C,YACvC+D,WAAW,CAAC,CACRF,eAAgBA,EAChBJ,OAAQ1D,KAAK0D,OACb/B,OAAQ3B,KAAK2B,cAf7B,KAqBasC,EACT,WAAYC,EAAMb,GAAqB,IAAbD,EAAY,uDAAJ,GAAI,oBAClCpD,KAAKkE,KAAOA,EACZlE,KAAKqD,OAASA,EACdrD,KAAKoD,MAAQA,G,mDCtBN,SAASe,EAAWzF,GAC/B,OAAQ,qBAAKK,UAAWC,IAAOC,WAAYC,QAASR,EAAMQ,QAASC,MAAOT,EAAMS,OAAS,GAAjF,SACHT,EAAMU,OJFA,SAASgF,IAAc,IAAD,EACXC,mBAAS,IADE,mBAC1BC,EAD0B,KACrBC,EADqB,KAGjC,OADA7E,EAAY6E,EACJ,sBAAKxF,UAAWC,IAAOwF,WAAvB,UACJ,sBAAKzF,UAAWC,IAAOyF,UAAvB,gBAEI,cAACN,EAAD,CAAY/E,KAAM,cAACsF,EAAA,EAAD,IAAiBvF,MAAO,CACtCwF,MAAO,SACRzF,QAAS,WACRqF,EAAO,UAGf,qBAAKxF,UAAWC,IAAO4F,WAAvB,SAEQN,EAAIO,MAAM,MAAMC,KAAI,SAACC,EAAMC,GACvB,OAAO,8BAAkBD,GAARC,WKtBrC,SAASC,GAAMpF,EAAQqF,GACnBrF,EAAOsF,eAAe,cACtB,IAAMC,EAAevF,EAAOwF,mBAAmB,CAC3CC,KAAMJ,IAWV,OARArF,EAAO0F,gBAAgBC,MAAK,SAAAC,GAEpB/F,EADA+F,EACUA,EAAIC,QAEJ,cAIXN,E,ICEPO,GACApD,GDAiBqD,G,WACjB,WAAY/F,EAAQgG,EAAIC,GAAK,oBACzB9F,KAAK6F,GAAKA,EACV7F,KAAK8F,GAAKA,EACV9F,KAAKH,OAASA,EACdG,KAAK+F,YAAc,CACfC,OAAQnG,EAAOwF,mBAAmB,CAC9BC,KAAMO,IAEVI,WAAY,QAEhBjG,KAAKkG,cAAgB,CACjBF,OAAQf,GAAMpF,EAAQiG,GACtBG,WAAY,Q,4CAIpB,SAASH,GACL9F,KAAK8F,GAAKA,EACV9F,KAAKkG,cAAgB,CACjBF,OAAQf,GAAMjF,KAAKH,OAAQiG,GAC3BG,WAAY,QAEhBE,OAAOC,MAAQpG,KAAKkG,cACpBG,QAAQC,IAAItG,KAAKkG,mB,KE3CJK,G,WACjB,WAAY1G,EAAQ2G,EAAKb,GAAW,oBAChC3F,KAAKH,OAASA,EACdG,KAAKmD,SAAWqD,EAChBxG,KAAK2F,SAAWA,EAChB3F,KAAKyC,SAAW,KAEhBzC,KAAKyG,gB,iDAGT,WAGIzG,KAAK4C,cAAgB5C,KAAKH,OAAOO,aAAa,CAC1CC,KAAM,GACNN,MAAOoG,OAAOO,eAAeC,QAAUR,OAAOO,eAAeE,WAGjE5G,KAAK6G,gBAAkB7G,KAAKH,OAAOiH,sBAAsB,CACrDC,QAAS,CACL,CAEIC,QAAS,EACTC,WAAYd,OAAOe,eAAeC,SAClCjD,KAAM,uB,4BAkBtB,WAEI,IADA,IAAIkD,EAAgB,GACXlE,EAAI,EAAGA,EAAIlD,KAAKmD,SAASC,MAAMC,OAAQH,IAC5CkE,EAAcC,KAAKrH,KAAKmD,SAASC,MAAMF,GAAGoE,iBAAiBpE,IAkC/D,OAhCAlD,KAAKuH,eAAiBvH,KAAKH,OAAO2H,qBAAqB,CACnDC,iBAAkB,CAACzH,KAAK6G,mBAG5B7G,KAAKyC,SAAWzC,KAAKH,OAAO6H,qBAAqB,CAC7CC,OAAQ3H,KAAKuH,eACbxB,YAAa/F,KAAK2F,SAASI,YAC3BG,cAAelG,KAAK2F,SAASO,cAC7B0B,kBAAmB5H,KAAKmD,SAASe,KACjC2D,YAAa,CACT,CACIlG,OAAQ,eAGhBmG,YAAa,CACTC,cAAeX,KAIvBjB,OAAO5D,KAAOvC,KAEdA,KAAKgD,iBAAmBhD,KAAKH,OAAOmI,gBAAgB,CAChDL,OAAQ3H,KAAKyC,SAASwF,mBAAmB,GACzClB,QAAS,CACL,CACIC,QAAS,EACTkB,SAAU,CACNrF,OAAQ7C,KAAK4C,mBAKtB5C,S,KDrEXmI,GAAiB,IAAI3H,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,I,8CAW5C,WAAoBc,GAApB,oBA4BM8G,EA5BN,SAAAhH,EAAA,6DA4BMgH,EA5BN,WAiCC,OAJAC,EAASC,QACTH,GAAe,GAAKI,YAAYC,MAAQ,IACxCH,EAASI,OAAOlG,GAAM4F,IACtBE,EAASK,MACFC,sBAAsBP,IAjC9B,mBACmBQ,UAAUC,WAD7B,aACmB,EAAeC,iBADlC,UACGC,EADH,6BAGOC,MAAM,sBAHb,uBAKkBD,EAAQE,gBAL1B,cAKGpJ,EALH,OAMGwI,EAAW,IAAIhH,EAASxB,EAAQyB,GAGhC4H,EAAe,IAAI1I,aAAa,EACjC,EAAG,GACH,GAAI,EACL,GAAI,GACH,EAAG,EACJ,GAAI,EACJ,EAAG,IAED2I,EAAiB,IAAIvJ,EAAUC,EAAQqJ,EAAcxC,eAAe0C,QACpEC,EAAQ,IAAI1F,EAAawF,EAAgB,WAAY,CACvD1F,OAAQ,EACRC,OAAQ,EACR/B,OAAQ,cAGZgE,GAAW,IAAIC,GAAS/F,EAAQyJ,GAAYC,OAAQD,GAAYE,UAC1DhD,EAAM,IAAIvC,EAAS,gBAAiB,EAAG,CAACoF,IAC9C9G,GAAO,IAAIgE,GAAK1G,EAAQ2G,EAAKb,IA1B1B,kBAoCIyC,GApCJ,6C,sBAuCA,IA6BHqB,GAAUC,GA7BDJ,GAAc,CACvBC,OAAO,qSAUPC,SAAS,0bAoBN,SAASG,GAAsBC,GAClCzB,GAAe,GAAKyB,EAAMC,QAC1B1B,GAAe,GAAKyB,EAAME,QAGvB,SAASC,KAAyC,IAApBzE,EAAmB,uDAAJ,GAChDK,GAASqE,SAAS1E,GAClB/C,GAAKG,iBACLuH,qBAAqBP,IACrBA,GAASD,KAGb,IAAIS,GAAYC,aAAY,WACxB,IAAI7I,EAAS8I,SAASC,eAAe,gBACjC/I,IACAA,EAAOgJ,iBAAiB,YAAaX,IACrCY,cAAcL,IAtFf,SAAP,mCAuFQM,CAAKlJ,GAAQkE,MAAK,SAAA4C,GACdqB,GAAMrB,EACD,OAALA,QAAK,IAALA,aAGT,KAGH,SAASqC,GAAwBC,GAC7BA,EAAOC,UAAUC,SAAS,CAAEC,GAAI,SAGhCH,EAAOC,UAAUG,yBAAyB,OAAQ,CAC9CC,SAAU,CACNC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEzBC,SAAU,CACN,WACA,MACA,SACA,KACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,MACA,KACA,WACA,SACA,QACA,SACA,UACA,QACA,SAEJC,MAAO,CACH,KACA,MACA,UACA,UACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,SACA,SACA,SACA,aACA,YAEJC,QAAS,CACL,SACA,WACA,UAEJC,QAAS,wBACTC,QAAS,wEACTC,OAAQ,cACRC,UAAW,CACPC,KAAM,CACF,CACI,mBACA,CACIC,MAAO,CACH,YAAa,CAAEC,MAAO,cACtB,SAAU,QACV,WAAY,UACZ,WAAY,gBAIxB,CAAC,yCAA0C,UAC3C,CAAC,oDAAqD,UACtD,CAAC,kBAAmB,UACpB,CAAC,iBAAkB,WAEvBC,WAAY,CACR,CAAC,aAAc,IACf,CAAC,OAAQ,UAAW,YACpB,CAAC,UAAW,YAEhBC,QAAS,CACL,CAAC,UAAW,WACZ,CAAC,OAAQ,UAAW,QACpB,CAAC,QAAS,eAMtBnB,EAAOoB,OAAOC,YAAY,eAAgB,CACtCC,KAAM,UACNC,SAAS,EACTC,MAAO,CAEH,CAAEP,MAAO,QAASQ,WAAY,UAC9B,CAAER,MAAO,UAAWQ,WAAY,UAChC,CAAER,MAAO,SAAUQ,WAAY,UAC/B,CAAER,MAAO,UAAWQ,WAAY,aAKxCzB,EAAOC,UAAUyB,+BAA+B,OAAQ,CACpDC,uBAAwB,WAcpB,MAAO,CAAEC,YAbS,CAAC,CACfC,MAAO,SACPC,KAAM9B,EAAOC,UAAU8B,mBAAmBC,QAC1CC,WAAY,CACR,wBACA,OACA,WACA,KACA,KACFC,KAAK,MACPC,gBAAiBnC,EAAOC,UAAUmC,6BAA6BC,gBAC/DC,cAAe,0B,IAWVC,G,4MACjBC,YAAa,E,EAEbC,MAAQ,CACJ7H,KAAM,EAAK5G,MAAM4G,MAAQ,I,EAG7B8H,WAAa,WAAwB,IAAvB9H,EAAsB,uDAAP,GACzB,EAAK+H,SAAS,CAAE/H,U,4CAIpB,WAAU,IAAD,OACL,OACI,cAAC,IAAD,CAAUgI,SAAO,EAACC,YAAU,EAACC,UAAU,EAAOC,OAAQ,SAACC,EAAOzM,EAAG2I,GAC7D,GAAI8D,EAAMrK,OAAQ,CACd,IAAIsK,EAAS,IAAIC,WACjBD,EAAOE,WAAWH,EAAM,IACxBC,EAAOG,OAAS,WACZzH,QAAQC,IAAIqH,EAAOI,OAAQ,GAC3B,EAAKX,WAAWO,EAAOI,QAAoB,KAGnDnE,EAAMoE,mBATV,SAWK,YAAuB,IAApBC,EAAmB,EAAnBA,aACA,OACI,6CAAK9O,MAAO,CAAE+O,OAAQ,SAAcD,KAApC,aACI,cAAC,IAAD,CACIC,OAAO,OACPC,MAAM,eACNC,gBAAgB,OAChBC,aAAc,EAAKlB,MAAM7H,KACzBgJ,MAAO,EAAKnB,MAAM7H,KAClBiJ,SAAU,EAAKnB,WACfoB,YAAa/D,e,GAnCPgE,a,uCEzO9BC,GAAYC,IAAZD,QAiBFE,G,4MAEFzB,MAAQ,CACJvJ,KAAM,EAAKlF,MAAMkF,KACjBiL,QAAQ,G,EAGZC,SAAWC,IAAMC,Y,EAEjBC,OAAS,WACL,EAAK5B,SAAS,CACVwB,QAAQ,IACT,WAAO,IAAD,IACL,YAAKC,gBAAL,mBAAeI,eAAf,SAAwBC,a,EAIhCC,WAAa,WACT,EAAK/B,SAAS,CACVwB,QAAQ,K,EAIhBQ,WAAa,SAACC,GACV,EAAKjC,SAAS,CACVzJ,KAAM0L,EAAEC,OAAOjB,S,EAIvBkB,WAAa,SAACF,GACVA,EAAEtB,mB,EAGNyB,MAAQ,WAAO,IAAD,IACV,eAAK/Q,OAAM+Q,aAAX,gBAAmB,EAAK/Q,MAAMgR,Q,EAGlCC,WAAa,WAAO,IAAD,IACf,eAAKjR,OAAMiR,kBAAX,gBAAwB,EAAKjR,MAAMgR,MAAO,EAAKvC,MAAMvJ,O,EAGzDgM,WAAa,WAAO,IAAD,IACf,eAAKlR,OAAMkR,kBAAX,gBAAwB,EAAKlR,MAAMgR,MAAO,EAAKvC,MAAMvJ,O,EAGzDiM,aAAe,WAAO,IAAD,IACjB,eAAKnR,OAAMmR,oBAAX,gBAA0B,EAAKnR,MAAMgR,Q,EAGzCI,aAAe,WAAO,IAAD,IACjB,eAAKpR,OAAMoR,oBAAX,gBAA0B,EAAKpR,MAAMgR,Q,EAGzCK,YAAc,eAAC,IAAD,WACV,cAAC,IAAKC,KAAN,CAAmB9Q,QAAS,EAAK+P,OAAjC,mBAAe,KACf,cAAC,IAAKe,KAAN,CAAmB9Q,QAAS,EAAK0Q,WAAjC,iBAAe,KACf,cAAC,IAAKI,KAAN,CAAmB9Q,QAAS,EAAKyQ,WAAjC,0BAAe,KACf,cAAC,IAAKM,QAAN,IACA,cAAC,IAAKD,KAAN,CAAmB9Q,QAAS,EAAKuQ,MAAjC,kBAAe,KACf,cAAC,IAAKO,KAAN,CAAmB9Q,QAAS,EAAK2Q,aAAjC,6BAAe,KACf,cAAC,IAAKG,KAAN,CAAmB9Q,QAAS,EAAK4Q,aAAjC,oCAAe,Q,4CAGnB,WAAU,IAAD,EACoB9P,KAAKmN,MAAtBvJ,EADH,EACGA,KAAMiL,EADT,EACSA,OACd,OAAO,cAAC,IAAD,CAAUqB,QAASlQ,KAAK+P,YAAaI,QAAS,CAAC,eAA/C,SACH,+BAEQtB,EACM,uBAAOuB,UAAW,GAChBC,SAAUrQ,KAAKwP,WACfc,IAAKtQ,KAAK8O,SAAU5K,KAAK,OAAOoK,MAAO1K,EACvC7E,UAAWC,KAAOuR,YAClBC,OAAQxQ,KAAKoP,WACbb,SAAUvO,KAAKqP,aACjB,mCAAGzL,GAAQ,qB,GA3Ed6K,aAkFFgC,G,4MACjBC,YAAc,E,EAEdnC,SAAW,SAACoC,GACR,EAAKtD,SAAS,CAAEsD,cAChB,EAAKxD,MAAMyD,MAAMC,SAAQ,SAACC,EAAW5N,GAAe,IAAD,IAC3C4N,EAAKC,MAAQJ,IAAb,UAA0BG,EAAKR,WAA/B,iBAA0B,EAAUpB,eAApC,aAA0B,EAAmBhC,aAC7CnD,GAAqB+G,EAAKR,IAAIpB,QAAQ/B,MAAM7H,U,EAKxD0L,OAAS,SAACC,EAAgBC,GACtB,eAAcA,GAAQD,I,EAI1BE,IAAM,WAAgE,IAA/DJ,EAA8D,uDAAhD,GAAIK,EAA4C,uDAA1B,GAAI9L,EAAsB,uDAAP,GAClDsL,EAAU,EAAKzD,MAAfyD,MACFD,EAAYI,EAAG,UAAMM,KAAK7I,OAC1B8I,EAAQ,YAAOV,GACfW,EAASxC,IAAMC,YACrBsC,EAASjK,KAAK,CACVzI,MAAO,cAAC,GAAD,CAAUgF,KAAMwN,EAAS1B,MAAOiB,EACnCb,aAAc,EAAKA,aACnBD,aAAc,EAAKA,aACnBJ,MAAO,EAAK+B,OACZ7B,WAAY,EAAKA,WACjBC,WAAY,EAAKA,aACrB6B,QAAS,cAAC,GAAD,CAAUnB,IAAKiB,EAAQjM,KAAMA,IACtCyL,IAAKJ,EACLL,IAAKiB,IAETxH,GAAqB,IACrB,EAAKsD,SAAS,CACVuD,MAAOU,EACPX,e,EAIRa,OAAS,SAACP,GAAuB,IAAD,EACC,EAAK9D,MAA1ByD,EADoB,EACpBA,MACJc,EAFwB,EACbf,UAEXgB,GAAqB,EACzBf,EAAMC,SAAQ,SAACC,EAAW5N,GAClB4N,EAAKC,MAAQE,IACbU,EAAYzO,EAAI,MAGxB,IAAMoO,EAAWV,EAAMgB,QAAO,SAACd,GAAD,OAAeA,EAAKC,MAAQE,KACtDK,EAASjO,QAAUqO,IAAiBT,IAEhCS,EADAC,GAAa,EACEL,EAASK,GAAWZ,IAEpBO,EAAS,GAAGP,KAGnC,EAAK1D,SAAS,CACVuD,MAAOU,EACPX,UAAWe,K,EAInB/B,WAAa,SAACsB,GAAkD,IAA/BrN,EAA8B,uDAAf,WAC5C,EAAKuJ,MAAMyD,MAAMC,SAAQ,SAACC,GAAe,IAAD,EACpC,GAAIA,EAAKC,MAAQE,IAAb,UAA0BH,EAAKR,WAA/B,aAA0B,EAAUpB,SAAS,CAC7C,IAAM2C,EAAO,IAAIC,KAAK,CAAChB,EAAKR,IAAIpB,QAAQ/B,MAAM7H,MAAO,CACjDpB,KAAM,eAEV6N,KAAeC,SAASH,EAAajO,EAAO,c,EAKxDgM,WAAa,SAACqB,GAAkD,IAA/BrN,EAA8B,uDAAf,WAC5C,EAAKuJ,MAAMyD,MAAMC,SAAQ,SAACC,GAAe,IAAD,EAChCA,EAAKC,MAAQE,IAAb,UAA0BH,EAAKR,WAA/B,aAA0B,EAAUpB,UACpC,EAAKiC,IAAI,OAAQvN,EAAO,QAASkN,EAAKR,IAAIpB,QAAQ/B,MAAM7H,U,EAKpEuK,aAAe,SAACoB,GACZ,IAAIgB,EAAa,GACjB,EAAK9E,MAAMyD,MAAMC,SAAQ,SAACC,EAAW5N,GAC7B4N,EAAKC,MAAQE,GACbgB,EAAI5K,KAAKyJ,MAGjB,EAAKzD,SAAS,CACVuD,MAAOqB,K,EAIfnC,aAAe,SAACmB,GACZ,IAAIiB,GAAS,EACTD,EAAa,GACjB,EAAK9E,MAAMyD,MAAMC,SAAQ,SAACC,EAAW5N,GAC5BgP,GACDD,EAAI5K,KAAKyJ,GAETA,EAAKC,MAAQE,IACbiB,GAAS,MAGjB,EAAK7E,SAAS,CACVuD,MAAOqB,K,EAIfV,OAASxC,IAAMC,Y,EAEf7B,MAAQ,CACJwD,UAAW,IACXC,MAAO,CACH,CACIhS,MAAO,cAAC,GAAD,CAAUgF,KAAK,cAAc8L,MAAM,IACtCI,aAAc,EAAKA,aACnBD,aAAc,EAAKA,aACnBJ,MAAO,EAAK+B,OACZ7B,WAAY,EAAKA,WACjBC,WAAY,EAAKA,aACrB6B,QAAS,cAAC,GAAD,CAAUnB,IAAK,EAAKiB,OAAQjM,KAAMgE,GAAYE,WACvD8G,IAAK,EAAKiB,OACVR,IAAK,O,EAKjBoB,QAAU,WACN,EAAKhF,MAAMyD,MAAMC,SAAQ,SAACC,EAAW5N,GAAe,IAAD,EAC3C4N,EAAKC,MAAQ,EAAK5D,MAAMwD,YAAxB,UAAqCG,EAAKR,WAA1C,aAAqC,EAAUpB,UAC/CnF,GAAqB+G,EAAKR,IAAIpB,QAAQ/B,MAAM7H,U,4CAKxD,WAAU,IAAD,SACwBtF,KAAKmN,MAA1ByD,EADH,EACGA,MAAOD,EADV,EACUA,UACf,OACI,cAAC,IAAD,CAAUrD,SAAO,EAACC,YAAU,EAACC,UAAQ,EAACC,OAAQ,SAACC,EAAO0E,EAAGxI,GACrD,GAAI8D,EAAMrK,OACN,IADe,IAAD,WACLH,GACL,IAAIyK,EAAS,IAAIC,WACjBD,EAAOE,WAAWH,EAAMxK,IACxByK,EAAOG,OAAS,WACZ,EAAKqD,IAAIzD,EAAMxK,GAAGU,KAAM8J,EAAMxK,GAAGU,KAAM+J,EAAOI,QAAoB,MAJjE7K,EAAI,EAAGA,EAAIwK,EAAMrK,OAAQH,IAAM,EAA/BA,IAFjB,SAWK,YAAuB,IAApB+K,EAAmB,EAAnBA,aACA,OACI,6CAAK9O,MAAO,CAAE+O,OAAQ,SAAcD,KAApC,aACI,cAAC,IAAD,CACI/J,KAAK,gBACLqK,SAAU,EAAKA,SACfoC,UAAWA,EACXK,OAAQ,EAAKA,OACbqB,mBACI,cAAClO,EAAD,CAAYjF,QAAS,EAAKiT,QAAS/S,KAC/B,cAACkT,GAAA,EAAD,CAAoBnT,MAAO,CAAEK,SAAU,YAPnD,SAWKoR,EAAM9L,KAAI,SAACgM,GAAD,OACP,cAACpC,GAAD,CAAS6D,IAAKzB,EAAKlS,MAAsB4T,UAAQ,EAAjD,SACK1B,EAAKW,SADqBX,EAAKC,oB,GAtKlCtC,aChGvBgE,OARf,WACE,OACE,qBAAK1T,UAAWC,IAAOW,SAAvB,SACE,cAAC,GAAD,O,6BCaS+S,OAXf,SAAmBhU,GAAqB,IAAD,EACNiU,eAAvBC,EAD6B,EAC7BA,MAAO1E,EADsB,EACtBA,OAAQoC,EADc,EACdA,IAGvB,OAFAnI,GAAe,GAAKyK,GAAS,EAC7BzK,GAAe,GAAK+F,GAAU,EAE5B,qBAAKnP,UAAWC,KAAO6T,UAAWvC,IAAKA,EAAvC,SACE,wBAAQzF,GAAG,eAAe+H,MAAOA,EAAO1E,OAAQA,OC6EvC4E,OA/Ef,WACE,OACE,eAAC,IAAD,CAAgBC,aAAc,EAAGC,qBAAsB,IAAvD,UACE,sBAAK7T,MAAO,CACV8T,QAAS,OACT/E,OAAQ,SAFV,UAIE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,eAAC,IAAD,CAAgB8E,qBAAsB,IAAtC,UACE,eAAC,IAAD,CAAgBE,UAAQ,EAACF,qBAAsB,IAA/C,UACE,qBAAK7T,MAAO,CACV+O,OAAQ,OACRiF,SAAU,UAFZ,SAIE,cAAC,GAAD,MAEF,cAAC/O,EAAD,OAEF,cAAC,GAAD,W,SCtBKgP,GAAeC,aAAY,CACtCzP,KAAM,UACN0P,aANiC,CACjChF,MAAO,GAMPiF,SAAU,CACRC,UAAW,SAAArG,GAKTA,EAAMmB,OAAS,GAEjBmF,UAAW,SAAAtG,GACTA,EAAMmB,OAAS,GAGjBoF,kBAAmB,SAACvG,EAAO+D,GACzB/D,EAAMmB,OAAS4C,EAAOyC,Y,GAK+BP,GAAaQ,QAiBzDR,I,GAjBAI,U,GAAWC,U,GAAWC,kBAiBtBN,GAAf,SC9CaS,GAAQC,aAAe,CAClCC,QAAS,CACPC,QAASC,M,SCOOC,QACW,cAA7B/N,OAAOgO,SAASC,UAEe,UAA7BjO,OAAOgO,SAASC,UAEhBjO,OAAOgO,SAASC,SAASC,MACvB,2DCVNC,IAAS7L,OACP,cAAC,IAAM8L,WAAP,UACE,cAAC,KAAD,CAAUV,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJzJ,SAASC,eAAe,SD0HpB,kBAAmBzB,WACrBA,UAAU4L,cAAcC,MACrBjP,MAAK,SAAAkP,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxO,QAAQwO,MAAMA,EAAMnP,a,mBE7I5BM,EAAO8O,QAAU,CAAC,WAAa,+BAA+B,UAAY,8BAA8B,WAAa,iC,mBCArH9O,EAAO8O,QAAU,CAAC,QAAU,2B,mBCA5B9O,EAAO8O,QAAU,CAAC,WAAa,iC,mBCA/B9O,EAAO8O,QAAU,CAAC,SAAW,6B,mBCA7B9O,EAAO8O,QAAU,CAAC,SAAW,6B,mBCA7B9O,EAAO8O,QAAU,CAAC,WAAa,iC,mBCA/B9O,EAAO8O,QAAU,CAAC,YAAc,4B,mBCAhC9O,EAAO8O,QAAU,CAAC,UAAY,gC","file":"static/js/main.8ab91819.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from './IconButton.module.css';\r\nimport { Tooltip } from 'antd';\r\n\r\ninterface ButtonProps {\r\n    icon: any;\r\n    onClick?: any;\r\n    style?: any;\r\n    tip?: string;\r\n}\r\n\r\nexport default function BarIconButton(props: ButtonProps) {\r\n    return (\r\n        <Tooltip placement=\"right\" title={props.tip} mouseEnterDelay={1}>\r\n            <div className={styles.iconbutton} onClick={props.onClick} style={props.style || {}}>\r\n                {props.icon}\r\n            </div>\r\n        </Tooltip >\r\n    );\r\n}","import React from 'react';\r\nimport styles from './Sidebar.module.css';\r\nimport { GithubOutlined } from '@ant-design/icons';\r\nimport BarIconButton from './BarIconButton';\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className={styles.sidebar}>\r\n      <BarIconButton icon={<GithubOutlined style={{\r\n        fontSize: 40\r\n      }}/>} tip=\"Go to Github repository page\"></BarIconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport styles from './MenuArea.module.css';\r\n\r\nfunction MenuArea() {\r\n  return (\r\n    <div className={styles.menuarea}>\r\n      dfssdfsd\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuArea;\r\n","import React, { useState } from \"react\";\r\nimport styles from './ConsoleBar.module.css';\r\nimport { StopOutlined } from '@ant-design/icons';\r\nimport IconButton from \"../mainarea/IconButton\";\r\n\r\nlet setMsgOut: any;\r\n\r\nexport {setMsgOut};\r\n\r\nexport default function ConsoleBar() {\r\n    const [msg, setMsg] = useState('')\r\n    setMsgOut = setMsg;\r\n    return (<div className={styles.consolebar}>\r\n        <div className={styles.titleline}>\r\n            Log\r\n            <IconButton icon={<StopOutlined/>} style={{\r\n                float: 'right',\r\n            }} onClick={()=> {\r\n                setMsg('');\r\n            }}></IconButton>\r\n        </div>\r\n        <div className={styles.messagebox}>\r\n            {\r\n                msg.split('\\n').map((line, index) => {\r\n                    return <div key={index}>{line}</div>;\r\n                })\r\n            }\r\n        </div>\r\n    </div>);\r\n}","export default class F32Buffer {\r\n    constructor(device, data, usage) {\r\n        this.elementSize = data.BYTES_PER_ELEMENT;\r\n        this.gpuBuffer = device.createBuffer({\r\n            size: data.byteLength,\r\n            usage: usage,\r\n            mappedAtCreation: true\r\n        });\r\n        new Float32Array(this.gpuBuffer.getMappedRange()).set(data);\r\n\t    this.gpuBuffer.unmap();\t\r\n    }\r\n}\r\n","const swapChainFormat = \"bgra8unorm\";\r\nconst renderPassDescriptor = {\r\n    colorAttachments: [\r\n        {\r\n            attachment: null,\r\n            loadValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\r\n        },\r\n    ],\r\n};\r\n\r\nexport default class Renderer {\r\n    constructor(device, canvas) {\r\n        this.device = device;\r\n        this.canvas = canvas;\r\n        this.context = canvas.getContext(\"gpupresent\");\r\n        this.swapChain = this.context.configureSwapChain({\r\n            device,\r\n            format: swapChainFormat\r\n        });\r\n        this.format = swapChainFormat;\r\n        this.commandEncoder = device.createCommandEncoder();\r\n    }\r\n\r\n    clear() {\r\n        this.commandEncoder = this.device.createCommandEncoder();\r\n        const textureView = this.swapChain.getCurrentTexture().createView();\r\n        renderPassDescriptor.colorAttachments[0].attachment = textureView;\r\n\r\n        this.passEncoder = this.commandEncoder.beginRenderPass(renderPassDescriptor);\r\n    }\r\n\r\n    end() {\r\n        this.passEncoder.endPass();\r\n\r\n        this.device.queue.submit([this.commandEncoder.finish()]);\r\n    }\r\n\r\n    render(mesh, mouseArray) {\r\n        let pipeline = mesh.pipeline || mesh.updatePipeline().pipeline;\r\n\r\n        this.device.queue.writeBuffer(\r\n            mesh.uniformBuffer,\r\n            0,\r\n            mouseArray.buffer,\r\n            mouseArray.byteOffset,\r\n            mouseArray.byteLength\r\n        );\r\n\r\n        this.passEncoder.setBindGroup(0, mesh.uniformBindGroup);\r\n        this.passEncoder.setPipeline(pipeline);\r\n        for (let i = 0; i < mesh.geometry.nodes.length; i++) {\r\n            this.passEncoder.setVertexBuffer(i, mesh.geometry.nodes[i].buffer.gpuBuffer);\r\n        }\r\n\r\n        this.passEncoder.draw(mesh.geometry.length, 1, 0, 0);\r\n    }\r\n}","let defaultOpt = {\r\n    stride: 2,\r\n    offset: 0,\r\n    format: \"float32x2\"\r\n}\r\n\r\nexport class GeometryNode {\r\n    constructor(buffer, name, options = defaultOpt) {\r\n        this.name = name;\r\n        this.buffer = buffer;\r\n        this.stride = options.stride;\r\n        this.offset = options.offset;\r\n        this.format = options.format;\r\n    }\r\n\r\n    toPipelineBuffer(shaderLocation) {\r\n        return {\r\n            arrayStride: this.stride * this.buffer.elementSize,\r\n            attributes:[{\r\n                shaderLocation: shaderLocation,\r\n                offset: this.offset,\r\n                format: this.format\r\n            }]\r\n        }\r\n    }\r\n}\r\n\r\nexport class Geometry {\r\n    constructor(type, length, nodes = []) {\r\n        this.type = type; // 拓扑类型\r\n        this.length = length; // 顶点数据数量长度\r\n        this.nodes = nodes;\r\n    }\r\n}","import React from \"react\";\r\nimport styles from './IconButton.module.css';\r\n\r\ninterface ButtonProps {\r\n    icon: any;\r\n    onClick?: any;\r\n    style?: any;\r\n}\r\n\r\nexport default function IconButton(props: ButtonProps) {\r\n    return (<div className={styles.iconbutton} onClick={props.onClick} style={props.style || {}}>\r\n        {props.icon}\r\n    </div>)\r\n}","import {setMsgOut} from '../framework/ConsoleBar/ConsoleBar';\r\n\r\nfunction DEBUG(device, source) {\r\n    device.pushErrorScope('validation');\r\n    const shaderModule = device.createShaderModule({\r\n        code: source,\r\n    });\r\n\r\n    device.popErrorScope().then(err => {\r\n        if (err) {\r\n            setMsgOut(err.message);\r\n        } else {\r\n            setMsgOut('success');\r\n        }\r\n    });\r\n\r\n    return shaderModule;\r\n}\r\n\r\nexport default class Material {\r\n    constructor(device, vs, fs) {\r\n        this.vs = vs;\r\n        this.fs = fs;\r\n        this.device = device;\r\n        this.vertexStage = {\r\n            module: device.createShaderModule({\r\n                code: vs,\r\n            }),\r\n            entryPoint: \"main\",\r\n        };\r\n        this.fragmentStage = {\r\n            module: DEBUG(device, fs),\r\n            entryPoint: \"main\"\r\n        };\r\n    }\r\n\r\n    changeFS(fs) {\r\n        this.fs = fs;\r\n        this.fragmentStage = {\r\n            module: DEBUG(this.device, fs),\r\n            entryPoint: \"main\"\r\n        };\r\n        window.stage = this.fragmentStage;\r\n        console.log(this.fragmentStage)\r\n    }\r\n} ","import React, { Component } from \"react\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport Dropzone from 'react-dropzone';\r\n\r\nimport F32Buffer from \"../../engine/buffer.js\";\r\nimport Renderer from \"../../engine/renderer.js\";\r\nimport { GeometryNode, Geometry } from \"../../engine/geometry.js\";\r\nimport Material from \"../../engine/material.js\";\r\nimport Mesh from \"../../engine/mesh.js\";\r\n\r\nlet f32BufferArray = new Float32Array([0, 0, 0, 0, 0]);\r\n\r\nexport { f32BufferArray };\r\n\r\nconst options = {\r\n    selectOnLineNumbers: true,\r\n    automaticLayout: true\r\n};\r\nlet material: Material;\r\nlet mesh: Mesh;\r\n\r\nexport async function init(canvas: any) {\r\n    const adapter = await navigator.gpu?.requestAdapter();\r\n    if (!adapter) {\r\n        throw Error('WebGPU not support')\r\n    }\r\n    const device = await adapter.requestDevice();\r\n    const renderer = new Renderer(device, canvas);\r\n\r\n    // 顶点位置数据\r\n    const verticesData = new Float32Array([\r\n        -1, 1,\r\n        -1, -1,\r\n        1, -1,\r\n        -1, 1,\r\n        1, -1,\r\n        1, 1,\r\n    ]);\r\n    const verticesBuffer = new F32Buffer(device, verticesData, GPUBufferUsage.VERTEX);\r\n    const vnode = new GeometryNode(verticesBuffer, 'vertices', {\r\n        stride: 2,\r\n        offset: 0,\r\n        format: 'float32x2'\r\n    })\r\n\r\n    material = new Material(device, wgslShaders.vertex, wgslShaders.fragment);\r\n    const geo = new Geometry(\"triangle-list\", 6, [vnode]);\r\n    mesh = new Mesh(device, geo, material);\r\n\r\n    function frame() {\r\n        renderer.clear();\r\n        f32BufferArray[4] = performance.now() / 1000;\r\n        renderer.render(mesh, f32BufferArray);\r\n        renderer.end();\r\n        return requestAnimationFrame(frame);\r\n    }\r\n\r\n    return frame;\r\n}\r\n\r\nexport const wgslShaders = {\r\n    vertex: `[[builtin(position)]] var<out> out_position : vec4<f32>;\r\n[[location(0)]] var<in> a_position : vec2<f32>;\r\n[[location(0)]] var<out> fragCoord : vec2<f32>;\r\n[[stage(vertex)]]\r\nfn main() -> void {\r\n\tout_position = vec4<f32>(a_position, 0.0, 1.0);\r\n    fragCoord = a_position;\r\n\treturn;\r\n}\r\n`,\r\n    fragment: `[[block]] struct Uniforms {\r\n    [[offset(0)]] mouse: vec2<f32>;\r\n    [[offset(8)]] resolution: vec2<f32>;\r\n    [[offset(16)]] time: f32;\r\n};\r\n[[binding(0), group(0)]] var<uniform> uniforms : Uniforms;  \r\n[[location(0)]] var<in> fragCoord: vec2<f32>;\r\n[[location(0)]] var<out> fragColor : vec4<f32>;\r\n\r\n\r\n[[stage(fragment)]]\r\nfn main() -> void {\r\n    fragColor = vec4<f32>(uniforms.mouse / uniforms.resolution, 0., 1.0);\r\n    return;\r\n}\r\n`\r\n};\r\n\r\nlet fff: any, fIndex: any;\r\n\r\nexport function renderCanvasMouseMove(event: any) {\r\n    f32BufferArray[0] = event.offsetX;\r\n    f32BufferArray[1] = event.offsetY;\r\n}\r\n\r\nexport function updateMaterialShader(code: string = '') {\r\n    material.changeFS(code);\r\n    mesh.updatePipeline();\r\n    cancelAnimationFrame(fIndex);\r\n    fIndex = fff();\r\n}\r\n\r\nlet hasCanvas = setInterval(() => {\r\n    let canvas = document.getElementById(\"renderTarget\");\r\n    if (canvas) {\r\n        canvas.addEventListener('mousemove', renderCanvasMouseMove);\r\n        clearInterval(hasCanvas);\r\n        init(canvas).then(frame => {\r\n            fff = frame;\r\n            frame?.();\r\n        });\r\n    }\r\n}, 100);\r\n\r\n// 设置语法高亮和代码提示\r\nfunction handleEditorBeforeMount(monaco: any) {\r\n    monaco.languages.register({ id: 'wgsl' });\r\n\r\n    // Register a tokens provider for the language\r\n    monaco.languages.setMonarchTokensProvider('wgsl', {\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/']\r\n        },\r\n        keywords: [\r\n            'continue',\r\n            'for',\r\n            'switch',\r\n            'if',\r\n            'break',\r\n            'else',\r\n            'case',\r\n            'void',\r\n            'const',\r\n            'true',\r\n            'false',\r\n            'var',\r\n            'fn',\r\n            'location',\r\n            'offset',\r\n            'block',\r\n            'struct',\r\n            'binding',\r\n            'group',\r\n            'stage'\r\n        ],\r\n        types: [\r\n            'in',\r\n            'out',\r\n            'uniform',\r\n            'sampler',\r\n            'i32',\r\n            'f32',\r\n            'i32',\r\n            'vec2',\r\n            'vec3',\r\n            'vec4',\r\n            'vec4',\r\n            'mat2x2',\r\n            'mat3x3',\r\n            'mat4x4',\r\n            'texture_2d',\r\n            'Uniforms'\r\n        ],\r\n        special: [\r\n            'return',\r\n            'fragment',\r\n            'vertex'\r\n        ],\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        tokenizer: {\r\n            root: [\r\n                [\r\n                    /[a-zA-Z_$][\\w$]*/,\r\n                    {\r\n                        cases: {\r\n                            '@keywords': { token: 'keyword.$0' },\r\n                            '@types': 'types',\r\n                            '@special': 'special',\r\n                            '@default': 'identifier',\r\n                        }\r\n                    }\r\n                ],\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number'],\r\n                [/(@digits)[fFdD]/, 'number'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment']\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n        }\r\n    });\r\n\r\n    // Define a new theme that contains only rules that match this language\r\n    monaco.editor.defineTheme('vs-dark-wgsl', {\r\n        base: 'vs-dark',\r\n        inherit: true,\r\n        rules: [\r\n            // { token: 'identifier', foreground: 'dcdc9d' },\r\n            { token: 'types', foreground: '4ec9b0' },\r\n            { token: 'special', foreground: 'c582b6' },\r\n            { token: 'number', foreground: 'b5c078' },\r\n            { token: 'comment', foreground: '529955' },\r\n        ]\r\n    });\r\n\r\n    // Register a completion item provider for the new language\r\n    monaco.languages.registerCompletionItemProvider('wgsl', {\r\n        provideCompletionItems: () => {\r\n            var suggestions = [{\r\n                label: 'ifelse',\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                insertText: [\r\n                    'if (${1:condition}) {',\r\n                    '\\t$0',\r\n                    '} else {',\r\n                    '\\t',\r\n                    '}'\r\n                ].join('\\n'),\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: 'If-Else Statement'\r\n            }];\r\n            return { suggestions: suggestions };\r\n        }\r\n    });\r\n}\r\n\r\ninterface CodePageProps {\r\n    code?: string;\r\n}\r\n\r\nexport default class CodePage extends Component<CodePageProps> {\r\n    isCodePage = true;\r\n\r\n    state = {\r\n        code: this.props.code || ''\r\n    }\r\n\r\n    updateCode = (code: string = '') => {\r\n        this.setState({ code });\r\n        // updateMaterialShader(code);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dropzone noClick noKeyboard multiple={false} onDrop={(files, r, event) => {\r\n                if (files.length) {\r\n                    let reader = new FileReader();\r\n                    reader.readAsText(files[0]);\r\n                    reader.onload = () => {\r\n                        console.log(reader.result, this)\r\n                        this.updateCode(reader.result as string || '');\r\n                    };\r\n                }\r\n                event.stopPropagation();\r\n            }}>\r\n                {({ getRootProps }) => {\r\n                    return (\r\n                        <div style={{ height: '100%' }} {...getRootProps()}>\r\n                            <Editor\r\n                                height=\"100%\"\r\n                                theme=\"vs-dark-wgsl\"\r\n                                defaultLanguage=\"wgsl\"\r\n                                defaultValue={this.state.code}\r\n                                value={this.state.code}\r\n                                onChange={this.updateCode}\r\n                                beforeMount={handleEditorBeforeMount}\r\n                            />\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n","export default class Mesh {\r\n    constructor(device, geo, material) {\r\n        this.device = device;\r\n        this.geometry = geo;\r\n        this.material = material;\r\n        this.pipeline = null;\r\n\r\n        this.createUniform();\r\n    }\r\n\r\n    createUniform() {\r\n\r\n        // mouse\r\n        this.uniformBuffer = this.device.createBuffer({\r\n            size: 20,\r\n            usage: window.GPUBufferUsage.UNIFORM | window.GPUBufferUsage.COPY_DST,\r\n        });\r\n\r\n        this.bindGroupLayout = this.device.createBindGroupLayout({\r\n            entries: [\r\n                {\r\n                    // mouse\r\n                    binding: 0,\r\n                    visibility: window.GPUShaderStage.FRAGMENT,\r\n                    type: 'uniform-buffer',\r\n                },\r\n                // {\r\n                //     // Sampler\r\n                //     binding: 1,\r\n                //     visibility: GPUShaderStage.FRAGMENT,\r\n                //     type: 'sampler',\r\n                // },\r\n                // {\r\n                //     // Texture view\r\n                //     binding: 2,\r\n                //     visibility: GPUShaderStage.FRAGMENT,\r\n                //     type: 'sampled-texture',\r\n                // },\r\n            ],\r\n        });\r\n    }\r\n\r\n    updatePipeline() {\r\n        let vbufferConfig = [];\r\n        for (let i = 0; i < this.geometry.nodes.length; i++) {\r\n            vbufferConfig.push(this.geometry.nodes[i].toPipelineBuffer(i))\r\n        }\r\n        this.pipelineLayout = this.device.createPipelineLayout({\r\n            bindGroupLayouts: [this.bindGroupLayout],\r\n        });\r\n\r\n        this.pipeline = this.device.createRenderPipeline({\r\n            layout: this.pipelineLayout,\r\n            vertexStage: this.material.vertexStage,\r\n            fragmentStage: this.material.fragmentStage,\r\n            primitiveTopology: this.geometry.type,\r\n            colorStates: [\r\n                {\r\n                    format: \"bgra8unorm\"\r\n                }\r\n            ],\r\n            vertexState: {\r\n                vertexBuffers: vbufferConfig\r\n            }\r\n        });\r\n\r\n        window.mesh = this;\r\n\r\n        this.uniformBindGroup = this.device.createBindGroup({\r\n            layout: this.pipeline.getBindGroupLayout(0),\r\n            entries: [\r\n                {\r\n                    binding: 0,\r\n                    resource: {\r\n                        buffer: this.uniformBuffer,\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n        return this;\r\n    }\r\n}","import { Tabs, Menu, Dropdown } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport CodePage, { updateMaterialShader, wgslShaders } from './CodePage';\r\nimport { CaretRightOutlined } from '@ant-design/icons';\r\nimport IconButton from './IconButton';\r\nimport styles from './Tabs.module.css';\r\nimport BlobDownloader from '@valeera/blobdownloader';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface TabTitleProps {\r\n    name: string;\r\n    keyId: string | number;\r\n    onDel?: any;\r\n    onSaveCode?: any;\r\n    onCopyPage?: any;\r\n    onCloseOther?: any;\r\n    onCloseRight?: any;\r\n}\r\n\r\ninterface TabTitleState {\r\n    name: string;\r\n    isEdit: boolean;\r\n}\r\n\r\nclass TabTitle extends Component<TabTitleProps, TabTitleState> {\r\n\r\n    state = {\r\n        name: this.props.name,\r\n        isEdit: false\r\n    }\r\n\r\n    inputRef = React.createRef() as any;\r\n\r\n    rename = () => {\r\n        this.setState({\r\n            isEdit: true\r\n        }, () => {\r\n            this.inputRef?.current?.select();\r\n        });\r\n    }\r\n\r\n    finishEdit = () => {\r\n        this.setState({\r\n            isEdit: false\r\n        });\r\n    }\r\n\r\n    changeName = (e: any) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    textSelect = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    onDel = () => {\r\n        this.props.onDel?.(this.props.keyId);\r\n    }\r\n\r\n    onSaveCode = () => {\r\n        this.props.onSaveCode?.(this.props.keyId, this.state.name);\r\n    }\r\n\r\n    onCopyPage = () => {\r\n        this.props.onCopyPage?.(this.props.keyId, this.state.name);\r\n    }\r\n\r\n    onCloseOther = () => {\r\n        this.props.onCloseOther?.(this.props.keyId);\r\n    }\r\n\r\n    onCloseRight = () => {\r\n        this.props.onCloseRight?.(this.props.keyId);\r\n    }\r\n\r\n    contextMenu = <Menu>\r\n        <Menu.Item key=\"1\" onClick={this.rename}>Rename</Menu.Item>\r\n        <Menu.Item key=\"2\" onClick={this.onCopyPage}>Copy</Menu.Item>\r\n        <Menu.Item key=\"3\" onClick={this.onSaveCode}>Download Code</Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"4\" onClick={this.onDel}>Close</Menu.Item>\r\n        <Menu.Item key=\"5\" onClick={this.onCloseOther}>Close other tabs</Menu.Item>\r\n        <Menu.Item key=\"6\" onClick={this.onCloseRight}>Close tabs to the right</Menu.Item>\r\n    </Menu>;\r\n\r\n    render() {\r\n        const { name, isEdit } = this.state;\r\n        return <Dropdown overlay={this.contextMenu} trigger={['contextMenu']}>\r\n            <span>\r\n                {\r\n                    isEdit\r\n                        ? <input maxLength={16}\r\n                            onSelect={this.textSelect}\r\n                            ref={this.inputRef} type=\"text\" value={name}\r\n                            className={styles.renameinput}\r\n                            onBlur={this.finishEdit}\r\n                            onChange={this.changeName} />\r\n                        : <>{name || 'Untitled'}</>\r\n                }\r\n            </span>\r\n        </Dropdown >;\r\n    }\r\n}\r\n\r\nexport default class PageTabs extends Component {\r\n    newTabIndex = 0;\r\n\r\n    onChange = (activeKey: string) => {\r\n        this.setState({ activeKey });\r\n        this.state.panes.forEach((pane: any, i: number) => {\r\n            if (pane.key === activeKey && pane.ref?.current?.isCodePage) {\r\n                updateMaterialShader(pane.ref.current.state.code);\r\n            }\r\n        });\r\n    };\r\n\r\n    onEdit = (targetKey: any, action: React.ReactText) => {\r\n        (this as any)[action](targetKey);\r\n    };\r\n\r\n    // 添加代码页\r\n    add = (key: string = '', tabName: string = '', code: string = '') => {\r\n        const { panes } = this.state;\r\n        const activeKey = key + `${Date.now()}`;\r\n        const newPanes = [...panes];\r\n        const tmpRef = React.createRef() as any;\r\n        newPanes.push({\r\n            title: <TabTitle name={tabName} keyId={activeKey}\r\n                onCloseRight={this.onCloseRight}\r\n                onCloseOther={this.onCloseOther}\r\n                onDel={this.remove}\r\n                onSaveCode={this.onSaveCode}\r\n                onCopyPage={this.onCopyPage} />,\r\n            content: <CodePage ref={tmpRef} code={code} />,\r\n            key: activeKey,\r\n            ref: tmpRef\r\n        });\r\n        updateMaterialShader('');\r\n        this.setState({\r\n            panes: newPanes,\r\n            activeKey,\r\n        });\r\n    };\r\n\r\n    remove = (targetKey: string) => {\r\n        const { panes, activeKey } = this.state;\r\n        let newActiveKey = activeKey;\r\n        let lastIndex: number = -1;\r\n        panes.forEach((pane: any, i: number) => {\r\n            if (pane.key === targetKey) {\r\n                lastIndex = i - 1;\r\n            }\r\n        });\r\n        const newPanes = panes.filter((pane: any) => pane.key !== targetKey);\r\n        if (newPanes.length && newActiveKey === targetKey) {\r\n            if (lastIndex >= 0) {\r\n                newActiveKey = newPanes[lastIndex].key;\r\n            } else {\r\n                newActiveKey = newPanes[0].key;\r\n            }\r\n        }\r\n        this.setState({\r\n            panes: newPanes,\r\n            activeKey: newActiveKey,\r\n        });\r\n    };\r\n\r\n    onSaveCode = (targetKey: string, name: string = 'Untitled') => {\r\n        this.state.panes.forEach((pane: any) => {\r\n            if (pane.key === targetKey && pane.ref?.current) {\r\n                const blob = new Blob([pane.ref.current.state.code], {\r\n                    type: 'text/plain'\r\n                });\r\n                BlobDownloader.download(blob as any, name + '.wgsl');\r\n            }\r\n        });\r\n    }\r\n\r\n    onCopyPage = (targetKey: string, name: string = 'Untitled') => {\r\n        this.state.panes.forEach((pane: any) => {\r\n            if (pane.key === targetKey && pane.ref?.current) {\r\n                this.add('copy', name + ' Copy', pane.ref.current.state.code);\r\n            }\r\n        });\r\n    }\r\n\r\n    onCloseOther = (targetKey: string) => {\r\n        let arr: any[] = [];\r\n        this.state.panes.forEach((pane: any, i: number) => {\r\n            if (pane.key === targetKey) {\r\n                arr.push(pane);\r\n            }\r\n        });\r\n        this.setState({\r\n            panes: arr\r\n        });\r\n    }\r\n\r\n    onCloseRight = (targetKey: string) => {\r\n        let isFind = false;\r\n        let arr: any[] = [];\r\n        this.state.panes.forEach((pane: any, i: number) => {\r\n            if (!isFind) {\r\n                arr.push(pane);\r\n            }\r\n            if (pane.key === targetKey) {\r\n                isFind = true;\r\n            }\r\n        });\r\n        this.setState({\r\n            panes: arr\r\n        });\r\n    }\r\n\r\n    tmpRef = React.createRef() as any;\r\n\r\n    state = {\r\n        activeKey: '1',\r\n        panes: [\r\n            {\r\n                title: <TabTitle name=\"Hello World\" keyId=\"1\"\r\n                    onCloseRight={this.onCloseRight}\r\n                    onCloseOther={this.onCloseOther}\r\n                    onDel={this.remove}\r\n                    onSaveCode={this.onSaveCode}\r\n                    onCopyPage={this.onCopyPage} />,\r\n                content: <CodePage ref={this.tmpRef} code={wgslShaders.fragment} />,\r\n                ref: this.tmpRef,\r\n                key: '1'\r\n            },\r\n        ],\r\n    };\r\n\r\n    runCode = () => {\r\n        this.state.panes.forEach((pane: any, i: number) => {\r\n            if (pane.key === this.state.activeKey && pane.ref?.current) {\r\n                updateMaterialShader(pane.ref.current.state.code);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { panes, activeKey } = this.state;\r\n        return (\r\n            <Dropzone noClick noKeyboard multiple onDrop={(files, f, event) => {\r\n                if (files.length) {\r\n                    for (let i = 0; i < files.length; i++) {\r\n                        let reader = new FileReader();\r\n                        reader.readAsText(files[i]);\r\n                        reader.onload = () => {\r\n                            this.add(files[i].name, files[i].name, reader.result as string || '');\r\n                        };\r\n                    }\r\n                }\r\n            }}>\r\n                {({ getRootProps }) => {\r\n                    return (\r\n                        <div style={{ height: '100%' }} {...getRootProps()}>\r\n                            <Tabs\r\n                                type=\"editable-card\"\r\n                                onChange={this.onChange}\r\n                                activeKey={activeKey}\r\n                                onEdit={this.onEdit}\r\n                                tabBarExtraContent={\r\n                                    <IconButton onClick={this.runCode} icon={\r\n                                        <CaretRightOutlined style={{ fontSize: '24px' }} />\r\n                                    }></IconButton>\r\n                                }\r\n                            >\r\n                                {panes.map((pane: any) => (\r\n                                    <TabPane tab={pane.title} key={pane.key} closable>\r\n                                        {pane.content}\r\n                                    </TabPane>\r\n                                ))}\r\n                            </Tabs>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport styles from './MainArea.module.css';\r\nimport PageTabs from './PageTabs';\r\n\r\nfunction MainArea() {\r\n  return (\r\n    <div className={styles.menuarea}>\r\n      <PageTabs/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainArea;\r\n","import React from 'react';\r\nimport styles from './RightSide.module.css';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport {f32BufferArray} from '../mainarea/CodePage';\r\n\r\ninterface IRightProps {\r\n  width?: number;\r\n}\r\n\r\nfunction RightSide(props: IRightProps) {\r\n  const { width, height, ref } = useResizeDetector();\r\n  f32BufferArray[2] = width || 0;\r\n  f32BufferArray[3] = height || 0;\r\n  return (\r\n    <div className={styles.rightside} ref={ref as any}>\r\n      <canvas id=\"renderTarget\" width={width} height={height}></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RightSide;\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\n// import { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport Sidebar from './framework/sidebar/Sidebar';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport 'react-splitter-layout/lib/index.css';\r\nimport MenuArea from './framework/menuarea/MenuArea';\r\nimport MainArea from './framework/mainarea/MainArea';\r\nimport ConsoleBar from './framework/ConsoleBar/ConsoleBar';\r\nimport RightSide from './framework/rightside/RightSide';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <SplitterLayout primaryIndex={1} secondaryInitialSize={250}>\r\n      <div style={{\r\n        display: 'flex',\r\n        height: '100vh'\r\n      }}>\r\n        <Sidebar />\r\n        <MenuArea />\r\n      </div>\r\n      <SplitterLayout secondaryInitialSize={250}>\r\n        <SplitterLayout vertical secondaryInitialSize={250}>\r\n          <div style={{\r\n            height: '100%',\r\n            overflow: 'hidden'\r\n          }}>\r\n            <MainArea />\r\n          </div>\r\n          <ConsoleBar />\r\n        </SplitterLayout>\r\n        <RightSide/>\r\n      </SplitterLayout>\r\n    </SplitterLayout>\r\n    // <div className=\"App\">\r\n    //   <Sidebar></Sidebar>\r\n    //   <SplitterLayout primaryIndex={1} secondaryInitialSize={250}>\r\n    //     <MenuArea />\r\n    //     <MainArea />\r\n    //   </SplitterLayout>\r\n\r\n    //   {/* <header className=\"App-header\">\r\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    //     <Counter />\r\n    //     <p>\r\n    //       Edit <code>src/App.tsx</code> and save to reload.\r\n    //     </p>\r\n    //     <span>\r\n    //       <span>Learn </span>\r\n    //       <a\r\n    //         className=\"App-link\"\r\n    //         href=\"https://reactjs.org/\"\r\n    //         target=\"_blank\"\r\n    //         rel=\"noopener noreferrer\"\r\n    //       >\r\n    //         React\r\n    //       </a>\r\n    //       <span>, </span>\r\n    //       <a\r\n    //         className=\"App-link\"\r\n    //         href=\"https://redux.js.org/\"\r\n    //         target=\"_blank\"\r\n    //         rel=\"noopener noreferrer\"\r\n    //       >\r\n    //         Redux\r\n    //       </a>\r\n    //       <span>, </span>\r\n    //       <a\r\n    //         className=\"App-link\"\r\n    //         href=\"https://redux-toolkit.js.org/\"\r\n    //         target=\"_blank\"\r\n    //         rel=\"noopener noreferrer\"\r\n    //       >\r\n    //         Redux Toolkit\r\n    //       </a>\r\n    //       ,<span> and </span>\r\n    //       <a\r\n    //         className=\"App-link\"\r\n    //         href=\"https://react-redux.js.org/\"\r\n    //         target=\"_blank\"\r\n    //         rel=\"noopener noreferrer\"\r\n    //       >\r\n    //         React Redux\r\n    //       </a>\r\n    //     </span>\r\n    //   </header> */}\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consolebar\":\"ConsoleBar_consolebar__V-B47\",\"titleline\":\"ConsoleBar_titleline__2cLTU\",\"messagebox\":\"ConsoleBar_messagebox__Zz3OW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__qe8Sq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconbutton\":\"IconButton_iconbutton__1mzQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuarea\":\"MenuArea_menuarea__-SQvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuarea\":\"MainArea_menuarea__LCz8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconbutton\":\"IconButton_iconbutton__3n6Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"renameinput\":\"Tabs_renameinput__2GpFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightside\":\"RightSide_rightside__1vr7N\"};"],"sourceRoot":""}