{"version":3,"sources":["framework/mainarea/MainArea.module.css","framework/mainarea/IconButton.module.css","framework/mainarea/Tabs.module.css","framework/sidebar/BarIconButton.tsx","framework/sidebar/Sidebar.tsx","features/editor/shaderSlice.ts","features/common/defaultCode.ts","features/editor/tabSlice.ts","framework/menuarea/MenuArea.tsx","framework/mainarea/CodePage.tsx","framework/mainarea/IconButton.tsx","framework/mainarea/ShaderTypeSelect.tsx","framework/mainarea/PageTabs.tsx","framework/mainarea/MainArea.tsx","features/editor/logSlice.ts","framework/ConsoleBar/ConsoleBar.tsx","features/editor/runtimeSlice.ts","engine/buffer.js","engine/renderer.ts","engine/geometry.js","app/store.ts","engine/material.js","engine/mesh.js","engine/glsllang.ts","framework/rightside/RenderingAreaWebGPU.tsx","framework/rightside/RightSide.tsx","App.tsx","serviceWorker.ts","index.tsx","framework/ConsoleBar/ConsoleBar.module.css","framework/rightside/RightSide.module.css","framework/sidebar/Sidebar.module.css","framework/sidebar/IconButton.module.css","framework/menuarea/MenuArea.module.css"],"names":["module","exports","BarIconButton","props","placement","title","tip","mouseEnterDelay","className","styles","iconbutton","onClick","style","icon","Sidebar","ShaderType","sidebar","GithubOutlined","fontSize","window","open","getDefaultCode","shaderType","WGSL","ES45","webgpuS","document","createElement","getContext","webgl2S","webglS","SUPPORT_STATE","initialState","needUpdate","currentCode","ES30","ES20","currentShaderType","globalShaderType","webgpuSupported","webgl2Supported","webglSupported","shaderSlice","createSlice","name","reducers","setNeedUpdate","state","action","payload","setCurrentCode","setCurrentShaderType","setGlobalShaderType","actions","codeNeedUpdate","shader","activeKey","panes","language","code","isCodePage","key","content","tabSlice","addTab","push","editTab","i","length","removeTab","splice","activeTab","setTabs","DirectoryTree","Tree","treeData","children","isLeaf","MenuArea","dispatch","useDispatch","useSelector","menuarea","padding","color","multiple","defaultExpandAll","onSelect","keys","info","type","node","fetch","then","data","text","str","Date","now","catch","e","console","log","handleEditorBeforeMountWGSL","monaco","languages","register","id","setMonarchTokensProvider","comments","lineComment","blockComment","keywords","ctypes","types","funcs","special","symbols","escapes","digits","tokenizer","root","cases","token","editor","defineTheme","base","inherit","rules","foreground","registerCompletionItemProvider","provideCompletionItems","suggestions","label","kind","CompletionItemKind","Snippet","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","documentation","handleEditorBeforeMountGLSL","CodePage","connect","tabs","bindActionCreators","updateCode","item","keyName","result","this","noClick","noKeyboard","onDrop","files","r","event","reader","FileReader","readAsText","onload","stopPropagation","getRootProps","height","theme","defaultLanguage","value","onChange","beforeMount","Component","IconButton","ShaderTypeSelect","menu","Item","Divider","disabled","overlay","cursor","lineHeight","display","TabPane","Tabs","TabTitle","isEdit","rename","setState","finishEdit","onRenameTab","keyId","changeName","target","textSelect","onDel","onSaveCode","onCopyPage","onCloseOther","onCloseRight","contextMenu","checkFinishEdit","keyCode","trigger","maxLength","renameinput","onBlur","onKeyDown","getShaderSuffix","PageTabs","newTabIndex","forEach","pane","onEdit","targetKey","add","tabName","destripter","remove","newActiveKey","lastIndex","newPanes","filter","blob","Blob","BlobDownloader","download","arr","isFind","runCode","f","tabBarExtraContent","CaretRightOutlined","map","codePage","tab","closable","MainArea","MSG_TYPE","initMessage","INFO","date","WARNING","messages","logSlice","setMessage","Array","pushMessage","concat","logInfo","ConsoleBar","msgs","consolebar","titleline","StopOutlined","float","messagebox","msg","warning","SUCCESS","success","runtimeSlice","fps","fullscreen","setFPS","setFullscreen","runtime","F32Buffer","device","usage","elementSize","BYTES_PER_ELEMENT","gpuBuffer","createBuffer","size","byteLength","mappedAtCreation","Float32Array","getMappedRange","set","unmap","swapChainFormat","renderPassDescriptor","colorAttachments","attachment","loadValue","g","b","a","Renderer","canvas","context","swapChain","format","commandEncoder","passEncoder","configureSwapChain","createCommandEncoder","textureView","getCurrentTexture","createView","beginRenderPass","endPass","queue","submit","finish","mesh","mouseArray","pipeline","updatePipeline","p","writeBuffer","uniformBuffer","buffer","byteOffset","setBindGroup","uniformBindGroup","setPipeline","geometry","nodes","setVertexBuffer","draw","defaultOpt","stride","offset","GeometryNode","options","shaderLocation","arrayStride","attributes","Geometry","store","configureStore","reducer","shaderReducer","logReducer","runtimeReducer","tabReducer","getWgslModule","source","startTime","pushErrorScope","shaderModule","createShaderModule","popErrorScope","err","ERROR","message","time","getGlslModule","glslang","binCode","compileGLSL","Material","vs","fs","vertexStage","entryPoint","fragmentStage","isGlsl","Mesh","geo","material","createUniform","GPUBufferUsage","UNIFORM","COPY_DST","bindGroupLayout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","FRAGMENT","vbufferConfig","toPipelineBuffer","pipelineLayout","createPipelineLayout","bindGroupLayouts","createRenderPipeline","layout","primitiveTopology","colorStates","vertexState","vertexBuffers","createBindGroup","getBindGroupLayout","resource","undefined","getGlslang","import","glslangModule","default","RenderingAreaWebGpu","codes","changeFS","cancelAnimationFrame","fIndex","fff","updateMaterialShader","width","f32BufferArray","lastTime","performance","deltaTime","frame","renderer","clear","render","end","requestAnimationFrame","navigator","gpu","requestAdapter","adapter","requestDevice","verticesData","verticesBuffer","VERTEX","vnode","wgslShaders","vertex","setInterval","renderCanvasMouseMove","offsetX","offsetY","hasCanvas","getElementById","addEventListener","clearInterval","init","RightSide","fpsInfo","isFullscreen","useResizeDetector","ref","rightside","toolbar","sizetext","toFixed","FullscreenExitOutlined","FullscreenOutlined","exitFullscreen","current","requestFullscreen","App","primaryIndex","secondaryInitialSize","vertical","overflow","Boolean","location","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c0c297ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuarea\":\"MainArea_menuarea__LCz8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconbutton\":\"IconButton_iconbutton__3n6Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"renameinput\":\"Tabs_renameinput__2GpFz\"};","import React from \"react\";\r\nimport styles from './IconButton.module.css';\r\nimport { Tooltip } from 'antd';\r\n\r\ninterface ButtonProps {\r\n    icon: any;\r\n    onClick?: any;\r\n    style?: any;\r\n    tip?: string;\r\n}\r\n\r\nexport default function BarIconButton(props: ButtonProps) {\r\n    return (\r\n        <Tooltip placement=\"right\" title={props.tip} mouseEnterDelay={1}>\r\n            <div className={styles.iconbutton} onClick={props.onClick} style={props.style || {}}>\r\n                {props.icon}\r\n            </div>\r\n        </Tooltip >\r\n    );\r\n}","import React from 'react';\r\nimport styles from './Sidebar.module.css';\r\nimport { GithubOutlined } from '@ant-design/icons';\r\nimport BarIconButton from './BarIconButton';\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className={styles.sidebar}>\r\n      <BarIconButton icon={<GithubOutlined style={{\r\n        fontSize: 40\r\n      }}/>} tip=\"Go to Github repository page\" onClick={()=>{\r\n        window.open('https://github.com/ValeeraJS/WGSL-Toy', '_blank');\r\n      }}></BarIconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport getDefaultCode from '../common/defaultCode';\r\n\r\nexport enum ShaderType {\r\n\tWGSL = \"WGSL\",\r\n\tES45 = \"GLSL ES4.5\",\r\n\tES30 = \"GLSL ES3.0\",\r\n\tES20 = \"GLSL ES2.0\",\r\n}\r\n\r\ninterface ShaderState {\r\n\tcurrentCode: string;\r\n\tneedUpdate: boolean;\r\n\tcurrentShaderType: ShaderType;\r\n\tglobalShaderType: ShaderType;\r\n\twebgpuSupported: boolean;\r\n\twebgl2Supported: boolean;\r\n\twebglSupported: boolean;\r\n}\r\n\r\nlet webgpuS = !!document.createElement(\"canvas\").getContext(\"gpupresent\");\r\nlet webgl2S = !!document.createElement(\"canvas\").getContext(\"webgl2\");\r\nlet webglS = !!document.createElement(\"canvas\").getContext(\"webgl\");\r\n\r\nexport const SUPPORT_STATE = {\r\n\tWebGPU: webgpuS,\r\n\tWebGL2: webgl2S,\r\n\tWebGL: webglS\r\n}\r\n\r\nconst initialState: ShaderState = {\r\n\tneedUpdate: false,\r\n\tcurrentCode: getDefaultCode(webgpuS ? ShaderType.WGSL : webgl2S ? ShaderType.ES30 : ShaderType.ES20),\r\n\tcurrentShaderType: webgpuS ? ShaderType.WGSL : webgl2S ? ShaderType.ES30 : ShaderType.ES20,\r\n\tglobalShaderType: webgpuS ? ShaderType.WGSL : webgl2S ? ShaderType.ES30 : ShaderType.ES20,\r\n\twebgpuSupported: webgpuS,\r\n\twebgl2Supported: webgl2S,\r\n\twebglSupported: webglS\r\n};\r\n\r\nexport const shaderSlice = createSlice({\r\n\tname: 'shader',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetNeedUpdate: (state, action: PayloadAction<boolean>) => {\r\n\t\t\tstate.needUpdate = action.payload;\r\n\t\t}, \r\n\t\tsetCurrentCode: (state, action: PayloadAction<string>) => {\r\n\t\t\tstate.currentCode = action.payload;\r\n\t\t},\r\n\t\tsetCurrentShaderType: (state, action: PayloadAction<ShaderType>) => {\r\n\t\t\tstate.currentShaderType = action.payload;\r\n\t\t},\r\n\t\tsetGlobalShaderType: (state, action: PayloadAction<ShaderType>) => {\r\n\t\t\tstate.globalShaderType = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setCurrentCode, setCurrentShaderType, setGlobalShaderType, setNeedUpdate } = shaderSlice.actions;\r\n\r\nexport const codeNeedUpdate = (state: RootState) => state.shader.needUpdate;\r\nexport const currentCode = (state: RootState) => state.shader.currentCode;\r\nexport const currentShaderType = (state: RootState) => state.shader.currentShaderType;\r\nexport const globalShaderType = (state: RootState) => state.shader.globalShaderType;\r\nexport const webgpuSupported = (state: RootState) => state.shader.webgpuSupported;\r\nexport const webgl2Supported = (state: RootState) => state.shader.webgl2Supported;\r\nexport const webglSupported = (state: RootState) => state.shader.webglSupported;\r\n\r\nexport default shaderSlice.reducer;\r\n","import { ShaderType } from \"../editor/shaderSlice\";\r\n\r\nexport default function getDefaultCode(shaderType: ShaderType): string {\r\n    if (shaderType === ShaderType.WGSL) {\r\n        return `[[location(0)]] var<out> fragColor : vec4<f32>;\r\n\r\n[[stage(fragment)]] fn main() -> void {\r\n    fragColor = vec4<f32>(1.0, 0.0, 0.0, 1.0);\r\n    return;\r\n}\r\n`;\r\n    } else if (shaderType === ShaderType.ES45) {\r\n        return `#version 450\r\nlayout(location = 0) out vec4 outColor;\r\n        \r\nvoid main() {\r\n    outColor = vec4(1.0, 0.0, 0.0, 1.0);\r\n}\r\n`;\r\n    }\r\n    return ``;\r\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport getDefaultCode from '../common/defaultCode';\r\nimport { ShaderType } from './shaderSlice';\r\n\r\ninterface TabState {\r\n    activeKey: string;\r\n\tpanes: TabDescripter[];\r\n}\r\n\r\nexport interface TabDescripter {\r\n    title: string,\r\n    content: string,\r\n    language?: ShaderType,\r\n    code?: string,\r\n    isCodePage?: boolean,\r\n    key: string;\r\n}\r\n\r\nconst initialState: TabState = {\r\n    activeKey: 'hello world',\r\n\tpanes: [{\r\n        title: 'HelloWorld',\r\n        language: ShaderType.WGSL,\r\n        code: getDefaultCode(ShaderType.WGSL),\r\n        isCodePage: true,\r\n        key: 'hello world',\r\n        content: ''\r\n    }]\r\n};\r\n\r\nexport const tabSlice = createSlice({\r\n\tname: 'log',\r\n\tinitialState,\r\n\treducers: {\r\n\t\taddTab: (state, action: PayloadAction<TabDescripter>) => {\r\n            let panes = [...state.panes];\r\n            panes.push(action.payload);\r\n            state.panes = panes;\r\n        },\r\n        editTab: (state, action: PayloadAction<TabDescripter>) => {\r\n            let panes = [...state.panes];\r\n            for (let i = 0; i < panes.length; i++) {\r\n                if (panes[i].key === action.payload.key) {\r\n                    panes[i] = action.payload;\r\n                    break;\r\n                }\r\n            }\r\n            state.panes = panes;\r\n        },\r\n        removeTab: (state, action: PayloadAction<string>) => {\r\n            let panes = [...state.panes];\r\n            for (let i = 0; i < panes.length; i++) {\r\n                if (panes[i].key === action.payload) {\r\n                    panes.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            state.panes = panes;\r\n        },\r\n        activeTab: (state, action: PayloadAction<string>) => {\r\n            state.activeKey = action.payload;\r\n        },\r\n        setTabs: (state, action: PayloadAction<TabDescripter[]>) => {\r\n            state.panes = action.payload;\r\n        }\r\n\t},\r\n});\r\n\r\nexport const { addTab, activeTab, editTab, removeTab, setTabs } = tabSlice.actions;\r\n\r\nexport const message = (state: RootState) => state.tabs.panes;\r\n\r\nexport default tabSlice.reducer;\r\n","import React from \"react\";\r\nimport styles from \"./MenuArea.module.css\";\r\nimport { Tree } from \"antd\";\r\nimport { globalShaderType, setCurrentCode, setCurrentShaderType, setNeedUpdate, ShaderType } from \"../../features/editor/shaderSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { activeTab, addTab } from \"../../features/editor/tabSlice\";\r\n\r\nconst { DirectoryTree } = Tree;\r\n\r\nconst treeData = [\r\n  {\r\n    title: \"Color\",\r\n    key: \"0-0\",\r\n    children: [\r\n      { title: \"1. pure color\", key: \"0-0-0\", isLeaf: true },\r\n      { title: \"2. color by uv\", key: \"0-0-1\", isLeaf: true },\r\n      { title: \"3. color by mouse\", key: \"0-0-2\", isLeaf: true },\r\n      { title: \"4. chess board\", key: \"0-0-3\", isLeaf: true },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Distance Field\",\r\n    key: \"0-1\",\r\n    children: [\r\n      { title: \"1. circle\", key: \"0-1-0\", isLeaf: true },\r\n      { title: \"2. square\", key: \"0-1-1\", isLeaf: true },\r\n      { title: \"3. ellipse\", key: \"0-1-2\", isLeaf: true },\r\n      { title: \"4. polygon\", key: \"0-1-3\", isLeaf: true },\r\n      { title: \"5. star\", key: \"0-1-4\", isLeaf: true },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Noise\",\r\n    key: \"0-2\",\r\n    children: [\r\n      { title: \"1. smoke\", key: \"0-2-0\", isLeaf: true },\r\n      { title: \"2. cloud\", key: \"0-2-1\", isLeaf: true },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Fractal\",\r\n    key: \"0-3\",\r\n    children: [\r\n      { title: \"1. julia set\", key: \"0-3-0\", isLeaf: true },\r\n      { title: \"2. mandelbrot set\", key: \"0-3-1\", isLeaf: true },\r\n      { title: \"3. fantasy tunnel\", key: \"0-3-2\", isLeaf: true },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction getFilePath(name: string, type: ShaderType): string {\r\n  if (type === ShaderType.WGSL) {\r\n    return \"./wgsl/\" + name + \".wgsl\";\r\n  } else if (type === ShaderType.ES45) {\r\n    return \"./es4.5/\" + name + \".glsl\";\r\n  } \r\n  return name;\r\n}\r\n\r\nfunction MenuArea() {\r\n  const dispatch = useDispatch();\r\n  const shaderType = useSelector(globalShaderType);\r\n\r\n  const onSelect = (keys: React.Key[], info: any) => {\r\n    if (info.node.isLeaf) {\r\n      fetch(getFilePath(info.node.title, shaderType))\r\n        .then((data) => {\r\n          return data.text();\r\n        })\r\n        .then((str) => {\r\n          let key = info.node.title + Date.now();\r\n          dispatch(addTab({\r\n            title: info.node.title,\r\n            content: \"CodePage\",\r\n            key,\r\n            code: str,\r\n            isCodePage: true,\r\n            language: shaderType\r\n          }));\r\n          dispatch(activeTab(key));\r\n          dispatch(setCurrentShaderType(shaderType));\r\n          dispatch(setCurrentCode(str));\r\n          dispatch(setNeedUpdate(true));\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.menuarea}>\r\n      <div\r\n        style={{\r\n          padding: \"4px 8px\",\r\n          fontSize: 14,\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        Tutorials\r\n      </div>\r\n      <DirectoryTree\r\n        multiple\r\n        defaultExpandAll\r\n        treeData={treeData}\r\n        onSelect={onSelect}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuArea;\r\n","import React, { Component } from \"react\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { bindActionCreators } from \"@reduxjs/toolkit\";\r\nimport {\r\n  setCurrentCode,\r\n  setCurrentShaderType,\r\n  ShaderType,\r\n} from \"../../features/editor/shaderSlice\";\r\nimport { editTab, TabDescripter } from \"../../features/editor/tabSlice\";\r\n\r\n// 设置wgsl语法高亮和代码提示\r\nfunction handleEditorBeforeMountWGSL(monaco: any) {\r\n  monaco.languages.register({ id: \"wgsl\" });\r\n\r\n  // Register a tokens provider for the language\r\n  monaco.languages.setMonarchTokensProvider(\"wgsl\", {\r\n    comments: {\r\n      lineComment: \"//\",\r\n      blockComment: [\"/*\", \"*/\"],\r\n    },\r\n    keywords: [\r\n      \"continue\",\r\n      \"for\",\r\n      \"switch\",\r\n      \"if\",\r\n      \"break\",\r\n      \"else\",\r\n      \"case\",\r\n      \"void\",\r\n      \"const\",\r\n      \"true\",\r\n      \"false\",\r\n      \"var\",\r\n      \"var<in>\",\r\n      \"var<out>\",\r\n      \"var<uniform>\",\r\n      \"fn\",\r\n      \"location\",\r\n      \"offset\",\r\n      \"block\",\r\n      \"struct\",\r\n      \"binding\",\r\n      \"group\",\r\n      \"stage\",\r\n    ],\r\n    ctypes: [\r\n      \"vec2<f32>\",\r\n      \"vec3<f32>\",\r\n      \"vec4<f32>\",\r\n      \"mat2x2<f32>\",\r\n      \"mat3x3<f32>\",\r\n      \"mat4x4<f32>\",\r\n    ],\r\n    types: [\r\n      \"in\",\r\n      \"out\",\r\n      \"uniform\",\r\n      \"sampler\",\r\n      \"i32\",\r\n      \"f32\",\r\n      \"i32\",\r\n      \"bool\",\r\n      \"texture_2d\",\r\n      \"Uniforms\",\r\n    ],\r\n    funcs: [\r\n      \"abs\",\r\n      \"atan\",\r\n      \"atan2\",\r\n      \"clamp\",\r\n      \"ceil\",\r\n      \"cos\",\r\n      \"cross\",\r\n      \"distance\",\r\n      \"dot\",\r\n      \"floor\",\r\n      \"fma\",\r\n      \"fract\",\r\n      \"length\",\r\n      \"log\",\r\n      \"log2\",\r\n      \"max\",\r\n      \"min\",\r\n      \"mix\",\r\n      \"modf\",\r\n      \"normalize\",\r\n      \"pow\",\r\n      \"reflect\",\r\n      \"sin\",\r\n      \"smoothStep\",\r\n    ],\r\n    special: [\"return\", \"fragment\", \"vertex\"],\r\n    symbols: /[=><!~?:&|+\\-*/^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    tokenizer: {\r\n      root: [\r\n        [/\\/\\/[^\\n]*/, \"comment\"],\r\n        [\r\n          /[a-zA-Z_$<>][\\w<>$]*/,\r\n          {\r\n            cases: {\r\n              \"@ctypes\": \"types\",\r\n              \"@keywords\": { token: \"keyword.$0\" },\r\n              \"@types\": \"types\",\r\n              \"@funcs\": \"funcs\",\r\n              \"@special\": \"special\",\r\n              \"@default\": \"identifier\",\r\n            },\r\n          },\r\n        ],\r\n        [/(@digits)[eE]([-+]?(@digits))?[fFdD]?/, \"number\"],\r\n        [/(@digits)\\.(@digits)([eE][-+]?(@digits))?[fFdD]?/, \"number\"],\r\n        [/(@digits)[fFdD]/, \"number\"],\r\n        [/(@digits)[lL]?/, \"number\"],\r\n      ],\r\n    },\r\n  });\r\n\r\n  // Define a new theme that contains only rules that match this language\r\n  monaco.editor.defineTheme(\"vs-dark-wgsl\", {\r\n    base: \"vs-dark\",\r\n    inherit: true,\r\n    rules: [\r\n      // { token: 'identifier', foreground: 'dcdc9d' },\r\n      { token: \"funcs\", foreground: \"d0dcaa\" },\r\n      { token: \"types\", foreground: \"4ec9b0\" },\r\n      { token: \"special\", foreground: \"c582b6\" },\r\n      { token: \"number\", foreground: \"b5c078\" },\r\n      { token: \"comment\", foreground: \"529955\" },\r\n    ],\r\n  });\r\n\r\n  // Register a completion item provider for the new language\r\n  monaco.languages.registerCompletionItemProvider(\"wgsl\", {\r\n    provideCompletionItems: () => {\r\n      var suggestions = [\r\n        {\r\n          label: \"ifelse\",\r\n          kind: monaco.languages.CompletionItemKind.Snippet,\r\n          insertText: `if (\\${1:condition}) {\r\n                    \\t$0\r\n                } else {\r\n                    \\t\r\n                }`,\r\n          insertTextRules:\r\n            monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n          documentation: \"If-Else Statement\",\r\n        },\r\n        {\r\n          label: \"location\",\r\n          kind: monaco.languages.CompletionItemKind.Snippet,\r\n          insertText: `[[location(\\${1:0})]]`,\r\n          insertTextRules:\r\n            monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n          documentation: \"Location Statement\",\r\n        },\r\n      ];\r\n      return { suggestions };\r\n    },\r\n  });\r\n}\r\n\r\n// 设置glsl语法高亮和代码提示\r\nfunction handleEditorBeforeMountGLSL(monaco: any) {\r\n  monaco.languages.register({ id: \"glsl\" });\r\n\r\n  // Register a tokens provider for the language\r\n  monaco.languages.setMonarchTokensProvider(\"glsl\", {\r\n    comments: {\r\n      lineComment: \"//\",\r\n      blockComment: [\"/*\", \"*/\"],\r\n    },\r\n    keywords: [\r\n      \"continue\",\r\n      \"for\",\r\n      \"switch\",\r\n      \"if\",\r\n      \"break\",\r\n      \"else\",\r\n      \"case\",\r\n      \"void\",\r\n      \"const\",\r\n      \"true\",\r\n      \"false\",\r\n      \"var\",\r\n      \"var\",\r\n      \"fn\",\r\n      \"layout\",\r\n      \"offset\",\r\n      \"block\",\r\n      \"struct\",\r\n      \"binding\",\r\n      \"group\",\r\n      \"stage\",\r\n    ],\r\n    types: [\r\n      \"in\",\r\n      \"out\",\r\n      \"uniform\",\r\n      \"sampler\",\r\n      \"int\",\r\n      \"float\",\r\n      \"bool\",\r\n      \"texture_2d\",\r\n      \"Uniforms\",\r\n      \"vec2\",\r\n      \"vec3\",\r\n      \"vec4\",\r\n      \"mat2\",\r\n      \"mat3\",\r\n      \"mat4\"\r\n    ],\r\n    funcs: [\r\n      \"abs\",\r\n      \"atan\",\r\n      \"atan2\",\r\n      \"clamp\",\r\n      \"ceil\",\r\n      \"cos\",\r\n      \"cross\",\r\n      \"distance\",\r\n      \"dot\",\r\n      \"floor\",\r\n      \"fma\",\r\n      \"fract\",\r\n      \"length\",\r\n      \"log\",\r\n      \"log2\",\r\n      \"main\",\r\n      \"max\",\r\n      \"min\",\r\n      \"mix\",\r\n      \"mod\",\r\n      \"modf\",\r\n      \"normalize\",\r\n      \"pow\",\r\n      \"reflect\",\r\n      \"sin\",\r\n      \"smoothstep\",\r\n    ],\r\n    special: [\"#version\", \"return\", \"location\", \"#define\"],\r\n    symbols: /[=><!~?:&|+\\-*/^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    tokenizer: {\r\n      root: [\r\n        [/\\/\\/[^\\n]*/, \"comment\"],\r\n        [\r\n          /[a-zA-Z_$#][\\w$]*/,\r\n          {\r\n            cases: {\r\n              \"@keywords\": { token: \"keyword.$0\" },\r\n              \"@types\": \"types\",\r\n              \"@funcs\": \"funcs\",\r\n              \"@special\": \"special\",\r\n              \"@default\": \"identifier\",\r\n            },\r\n          },\r\n        ],\r\n        [/(@digits)[eE]([-+]?(@digits))?[fFdD]?/, \"number\"],\r\n        [/(@digits)\\.(@digits)([eE][-+]?(@digits))?[fFdD]?/, \"number\"],\r\n        [/(@digits)[fFdD]/, \"number\"],\r\n        [/(@digits)[lL]?/, \"number\"],\r\n      ],\r\n    },\r\n  });\r\n\r\n  // Define a new theme that contains only rules that match this language\r\n  monaco.editor.defineTheme(\"vs-dark-glsl\", {\r\n    base: \"vs-dark\",\r\n    inherit: true,\r\n    rules: [\r\n      // { token: 'identifier', foreground: 'dcdc9d' },\r\n      { token: \"funcs\", foreground: \"d0dcaa\" },\r\n      { token: \"types\", foreground: \"4ec9b0\" },\r\n      { token: \"special\", foreground: \"c582b6\" },\r\n      { token: \"number\", foreground: \"b5c078\" },\r\n      { token: \"comment\", foreground: \"529955\" },\r\n    ],\r\n  });\r\n\r\n  // Register a completion item provider for the new language\r\n  monaco.languages.registerCompletionItemProvider(\"glsl\", {\r\n    provideCompletionItems: () => {\r\n      var suggestions = [\r\n        {\r\n          label: \"ifelse\",\r\n          kind: monaco.languages.CompletionItemKind.Snippet,\r\n          insertText: `if (\\${1:condition}) {\r\n                    \\t$0\r\n                } else {\r\n                    \\t\r\n                }`,\r\n          insertTextRules:\r\n            monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n          documentation: \"If-Else Statement\",\r\n        }\r\n      ];\r\n      return { suggestions };\r\n    },\r\n  });\r\n}\r\n\r\n@(connect(\r\n  (state: RootState) => {\r\n    return {\r\n      tabs: state.tabs,\r\n      shader: state.shader,\r\n    };\r\n  },\r\n  (dispatch) => {\r\n    return bindActionCreators(\r\n      {\r\n        setCurrentCode: setCurrentCode,\r\n        setCurrentShaderType: setCurrentShaderType,\r\n        editTab: editTab,\r\n      },\r\n      dispatch\r\n    );\r\n  }\r\n) as any)\r\nexport default class CodePage extends Component<any> {\r\n  isCodePage = true;\r\n\r\n  updateCode = (code: string = \"\") => {\r\n    let panes: TabDescripter[] = this.props.tabs.panes;\r\n    for(let item of panes) {\r\n      if (item.key === this.props.keyName) {\r\n        let result = {\r\n          ...item\r\n        };\r\n        result.code = code;\r\n        this.props.editTab(result);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {language, code} = this.props;\r\n    return (\r\n      <Dropzone\r\n        noClick\r\n        noKeyboard\r\n        multiple={false}\r\n        onDrop={(files, r, event) => {\r\n          if (files.length) {\r\n            let reader = new FileReader();\r\n            reader.readAsText(files[0]);\r\n            reader.onload = () => {\r\n              this.updateCode((reader.result as string) || \"\");\r\n            };\r\n          }\r\n          event.stopPropagation();\r\n        }}\r\n      >\r\n        {({ getRootProps }) => {\r\n          return (\r\n            <div style={{ height: \"100%\" }} {...getRootProps()}>\r\n              <Editor\r\n                height=\"100%\"\r\n                theme={language === ShaderType.WGSL ? \"vs-dark-wgsl\" : \"vs-dark-glsl\"}\r\n                defaultLanguage={language === ShaderType.WGSL ? \"wgsl\" : \"glsl\"}\r\n                value={code}\r\n                onChange={this.updateCode}\r\n                beforeMount={language === ShaderType.WGSL ? handleEditorBeforeMountWGSL : handleEditorBeforeMountGLSL}\r\n              />\r\n            </div>\r\n          );\r\n        }}\r\n      </Dropzone>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styles from './IconButton.module.css';\r\n\r\ninterface ButtonProps {\r\n    icon: any;\r\n    onClick?: any;\r\n    style?: any;\r\n}\r\n\r\nexport default function IconButton(props: ButtonProps) {\r\n    return (<div className={styles.iconbutton} onClick={props.onClick} style={props.style || {}}>\r\n        {props.icon}\r\n    </div>)\r\n}","import { DownOutlined } from \"@ant-design/icons\";\r\nimport { Dropdown, Menu } from \"antd\";\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  webgpuSupported,\r\n  webgl2Supported,\r\n  webglSupported,\r\n  globalShaderType,\r\n  ShaderType,\r\n  setGlobalShaderType,\r\n} from \"../../features/editor/shaderSlice\";\r\n\r\nexport const LanguageUtils = {\r\n  getShaderSuffix(str: string) {\r\n    if (str === \"wgsl\") {\r\n      return \".wgsl\";\r\n    } else {\r\n      return \".glsl\";\r\n    }\r\n  },\r\n};\r\n\r\nexport default function ShaderTypeSelect() {\r\n  const shaderType = useSelector(globalShaderType);\r\n  const webgpuS = useSelector(webgpuSupported);\r\n  const webgl2S = useSelector(webgl2Supported);\r\n  const webglS = useSelector(webglSupported);\r\n  const dispatch = useDispatch();\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={(e: any) => {\r\n        dispatch(setGlobalShaderType(e.key as ShaderType));\r\n      }}\r\n    >\r\n      {webgpuS && (\r\n        <>\r\n          <Menu.Item key={ShaderType.WGSL}>WebGPU: WGSL</Menu.Item>\r\n          <Menu.Item key={ShaderType.ES45}>WebGPU: GLSL ES4.5</Menu.Item>\r\n        </>\r\n      )}\r\n      {webgl2S && (\r\n        <Menu.Item key={ShaderType.ES30}>WebGL2: GLSL ES3.0</Menu.Item>\r\n      )}\r\n      {webglS && <Menu.Item key={ShaderType.ES20}>WebGL: GLSL ES2.0</Menu.Item>}\r\n      {(!webgpuS || !webgl2S || !webglS) && (\r\n        <>\r\n          <Menu.Divider />\r\n          {!webgpuS && (\r\n            <>\r\n              <Menu.Item disabled key={ShaderType.WGSL}>\r\n                WebGPU: WGSL\r\n              </Menu.Item>\r\n              <Menu.Item disabled key={ShaderType.ES45}>\r\n                WebGPU: GLSL ES4.5\r\n              </Menu.Item>\r\n            </>\r\n          )}\r\n          {!webgl2S && (\r\n            <Menu.Item disabled key={ShaderType.ES30}>\r\n              WebGL2: GLSL ES3.0\r\n            </Menu.Item>\r\n          )}\r\n          {!webglS && (\r\n            <Menu.Item disabled key={ShaderType.ES20}>\r\n              WebGL: GLSL ES2.0\r\n            </Menu.Item>\r\n          )}\r\n        </>\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown overlay={menu}>\r\n      <span\r\n        style={{\r\n          color: \"#cccccc\",\r\n          cursor: \"pointer\",\r\n          lineHeight: \"40px\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        Language: {shaderType}\r\n      </span>\r\n    </Dropdown>\r\n  );\r\n}\r\n","import { Tabs, Menu, Dropdown } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport CodePage from \"./CodePage\";\r\nimport { CaretRightOutlined } from \"@ant-design/icons\";\r\nimport IconButton from \"./IconButton\";\r\nimport styles from \"./Tabs.module.css\";\r\nimport BlobDownloader from \"@valeera/blobdownloader\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport ShaderTypeSelect from \"./ShaderTypeSelect\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { bindActionCreators } from \"@reduxjs/toolkit\";\r\nimport {\r\n  setCurrentCode,\r\n  setCurrentShaderType,\r\n  setNeedUpdate,\r\n  ShaderType,\r\n} from \"../../features/editor/shaderSlice\";\r\nimport {\r\n  activeTab,\r\n  addTab,\r\n  editTab,\r\n  removeTab,\r\n  setTabs,\r\n  TabDescripter,\r\n} from \"../../features/editor/tabSlice\";\r\nimport getDefaultCode from \"../../features/common/defaultCode\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface TabTitleProps {\r\n  name: string;\r\n  keyId: string | number;\r\n  language: ShaderType;\r\n  onDel?: any;\r\n  onSaveCode?: any;\r\n  onCopyPage?: any;\r\n  onCloseOther?: any;\r\n  onCloseRight?: any;\r\n  onRenameTab?: any;\r\n}\r\n\r\ninterface TabTitleState {\r\n  name: string;\r\n  isEdit: boolean;\r\n}\r\n\r\nclass TabTitle extends Component<TabTitleProps, TabTitleState> {\r\n  state = {\r\n    name: this.props.name,\r\n    isEdit: false,\r\n  };\r\n\r\n  rename = () => {\r\n    this.setState(\r\n      {\r\n        isEdit: true,\r\n      }\r\n    );\r\n  };\r\n\r\n  finishEdit = () => {\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n    this.props.onRenameTab(this.state.name, this.props.keyId);\r\n  };\r\n\r\n  changeName = (e: any) => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  textSelect = (e: any) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  onDel = () => {\r\n    this.props.onDel?.(this.props.keyId);\r\n  };\r\n\r\n  onSaveCode = () => {\r\n    this.props.onSaveCode?.(this.props.keyId, this.state.name);\r\n  };\r\n\r\n  onCopyPage = () => {\r\n    this.props.onCopyPage?.(this.props.keyId, this.state.name);\r\n  };\r\n\r\n  onCloseOther = () => {\r\n    this.props.onCloseOther?.(this.props.keyId);\r\n  };\r\n\r\n  onCloseRight = () => {\r\n    this.props.onCloseRight?.(this.props.keyId);\r\n  };\r\n\r\n  contextMenu = (\r\n    <Menu>\r\n      <Menu.Item key=\"1\" onClick={this.rename}>\r\n        Rename\r\n      </Menu.Item>\r\n      <Menu.Item key=\"2\" onClick={this.onCopyPage}>\r\n        Copy\r\n      </Menu.Item>\r\n      <Menu.Item key=\"3\" onClick={this.onSaveCode}>\r\n        Download Code\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key=\"4\" onClick={this.onDel}>\r\n        Close\r\n      </Menu.Item>\r\n      <Menu.Item key=\"5\" onClick={this.onCloseOther}>\r\n        Close other tabs\r\n      </Menu.Item>\r\n      <Menu.Item key=\"6\" onClick={this.onCloseRight}>\r\n        Close tabs to the right\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  checkFinishEdit = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      this.finishEdit(); \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, isEdit } = this.state;\r\n    return (\r\n      <Dropdown overlay={this.contextMenu} trigger={[\"contextMenu\"]}>\r\n        <span>\r\n          {isEdit ? (\r\n            <input\r\n              maxLength={16}\r\n              onSelect={this.textSelect}\r\n              type=\"text\"\r\n              value={name}\r\n              className={styles.renameinput}\r\n              onBlur={this.finishEdit}\r\n              onChange={this.changeName}\r\n              onKeyDown={this.checkFinishEdit}\r\n            />\r\n          ) : (\r\n            <>{name || \"Untitled\"}{getShaderSuffix(this.props.language)}</>\r\n          )}\r\n        </span>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getShaderSuffix(type: ShaderType) {\r\n  if (type === ShaderType.WGSL) {\r\n    return \".wgsl\";\r\n  } else {\r\n    return \".glsl\";\r\n  }\r\n}\r\n\r\n@(connect(\r\n  (state: RootState) => {\r\n    return {\r\n      tabs: state.tabs,\r\n      shader: state.shader,\r\n    };\r\n  },\r\n  (dispatch) => {\r\n    return bindActionCreators(\r\n      {\r\n        setNeedUpdate,\r\n        setCurrentCode,\r\n        setCurrentShaderType,\r\n        addTab,\r\n        activeTab,\r\n        removeTab,\r\n        editTab,\r\n        setTabs\r\n      },\r\n      dispatch\r\n    );\r\n  }\r\n) as any)\r\nexport default class PageTabs extends Component<any, any> {\r\n  newTabIndex = 0;\r\n\r\n  onChange = (activeKey: string) => {\r\n    let {panes} = this.props.tabs;\r\n    panes.forEach((pane: any, i: number) => {\r\n      if (pane.key === activeKey && pane.isCodePage) {\r\n        this.props.setCurrentCode(pane.code);\r\n        this.props.setCurrentShaderType(pane.language);\r\n        this.props.setNeedUpdate(true);\r\n      }\r\n    });\r\n    this.props.activeTab(activeKey);\r\n  };\r\n\r\n  onRenameTab = (name: string, activeKey: string) => {\r\n    let {panes} = this.props.tabs;\r\n    panes.forEach((pane: any, i: number) => {\r\n      if (pane.key === activeKey) {\r\n        let result = {...pane};\r\n        result.title = name;\r\n        this.props.editTab(result);\r\n      }\r\n    });\r\n  }\r\n\r\n  onEdit = (targetKey: any, action: React.ReactText) => {\r\n    (this as any)[action](targetKey);\r\n  };\r\n\r\n  // 添加代码页\r\n  add = (\r\n    key: string = \"\",\r\n    tabName: string = \"\",\r\n    code: string | null | undefined,\r\n    language: ShaderType = this.props.shader.globalShaderType\r\n  ) => {\r\n    const activeKey = key + `${Date.now()}`;\r\n    const destripter: TabDescripter = {\r\n      title: tabName,\r\n      content: \"CodePage\",\r\n      language: language,\r\n      code: code || getDefaultCode(language),\r\n      isCodePage: true,\r\n      key: activeKey,\r\n    };\r\n\r\n    this.props.addTab(destripter);\r\n    this.props.activeTab(activeKey);\r\n    this.props.setCurrentCode(code);\r\n    this.props.setCurrentShaderType(language);\r\n  };\r\n\r\n  remove = (targetKey: string) => {\r\n    let {activeKey, panes} = this.props.tabs;\r\n    let newActiveKey = activeKey;\r\n    let lastIndex: number = -1;\r\n    panes.forEach((pane: any, i: number) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const newPanes = panes.filter((pane: any) => pane.key !== targetKey);\r\n    if (newPanes.length && newActiveKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        newActiveKey = newPanes[lastIndex].key;\r\n      } else {\r\n        newActiveKey = newPanes[0].key;\r\n      }\r\n    }\r\n    this.props.removeTab(targetKey);\r\n    this.props.activeTab(newActiveKey);\r\n  };\r\n\r\n  onSaveCode = (targetKey: string, name: string = \"Untitled\") => {\r\n    this.props.tabs.panes.forEach((pane: TabDescripter) => {\r\n      if (pane.key === targetKey) {\r\n        const blob = new Blob([pane.code || ''], {\r\n          type: \"text/plain\",\r\n        });\r\n        BlobDownloader.download(blob as any, (name || 'Untitled') + getShaderSuffix(pane.language as ShaderType));\r\n      }\r\n    });\r\n  };\r\n\r\n  onCopyPage = (targetKey: string, name: string = \"Untitled\") => {\r\n    this.props.tabs.panes.forEach((pane: TabDescripter) => {\r\n      if (pane.key === targetKey) {\r\n        this.add(\"copy\", name + \" Copy\", pane.code, pane.language);\r\n      }\r\n    });\r\n  };\r\n\r\n  onCloseOther = (targetKey: string) => {\r\n    let arr: any[] = [];\r\n    this.props.tabs.panes.forEach((pane: any) => {\r\n      if (pane.key === targetKey) {\r\n        arr.push(pane);\r\n      }\r\n    });\r\n    this.props.setTabs(arr);\r\n  };\r\n\r\n  onCloseRight = (targetKey: string) => {\r\n    let isFind = false;\r\n    let arr: any[] = [];\r\n    this.props.tabs.panes.forEach((pane: any) => {\r\n      if (!isFind) {\r\n        arr.push(pane);\r\n      }\r\n      if (pane.key === targetKey) {\r\n        isFind = true;\r\n      }\r\n    });\r\n    this.props.setTabs(arr);\r\n  };\r\n\r\n  runCode = () => {\r\n    let {activeKey, panes} = this.props.tabs;\r\n    panes.forEach((pane: TabDescripter) => {\r\n      if (pane.key === activeKey) {\r\n        this.props.setCurrentShaderType(pane.language);\r\n        this.props.setCurrentCode(pane.code);\r\n        this.props.setNeedUpdate(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { panes, activeKey } = this.props.tabs;\r\n    return (\r\n      <Dropzone\r\n        noClick\r\n        noKeyboard\r\n        multiple\r\n        onDrop={(files, f, event) => {\r\n          if (files.length) {\r\n            for (let i = 0; i < files.length; i++) {\r\n              let reader = new FileReader();\r\n              reader.readAsText(files[i]);\r\n              reader.onload = () => {\r\n                this.add(\r\n                  files[i].name,\r\n                  files[i].name,\r\n                  reader.result as string\r\n                );\r\n              };\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {({ getRootProps }) => {\r\n          return (\r\n            <div style={{ height: \"100%\" }} {...getRootProps()}>\r\n              <Tabs\r\n                type=\"editable-card\"\r\n                onChange={this.onChange}\r\n                activeKey={activeKey}\r\n                onEdit={this.onEdit}\r\n                tabBarExtraContent={\r\n                  <>\r\n                    <ShaderTypeSelect />\r\n                    <IconButton\r\n                      onClick={this.runCode}\r\n                      icon={<CaretRightOutlined style={{ fontSize: \"24px\" }} />}\r\n                    ></IconButton>\r\n                  </>\r\n                }\r\n              >\r\n                {panes.map((pane: TabDescripter) => {\r\n                  if (pane.isCodePage) {\r\n                    let title = (\r\n                      <TabTitle\r\n                        name={pane.title}\r\n                        keyId={pane.key}\r\n                        language={pane.language as ShaderType}\r\n                        onRenameTab={this.onRenameTab}\r\n                        onCloseRight={this.onCloseRight}\r\n                        onCloseOther={this.onCloseOther}\r\n                        onDel={this.remove}\r\n                        onSaveCode={this.onSaveCode}\r\n                        onCopyPage={this.onCopyPage}\r\n                      />\r\n                    );\r\n                    let codePage = <CodePage language={pane.language} code={pane.code} keyName={pane.key}/>\r\n                    return (\r\n                      <TabPane tab={title} key={pane.key} closable>\r\n                        {codePage}\r\n                      </TabPane>\r\n                    );\r\n                  } else {\r\n                    return \"Unknown Page\";\r\n                  }\r\n                })}\r\n              </Tabs>\r\n            </div>\r\n          );\r\n        }}\r\n      </Dropzone>\r\n    );\r\n  }\r\n}\r\n","import styles from './MainArea.module.css';\r\nimport PageTabs from './PageTabs';\r\n\r\nfunction MainArea() {\r\n  return (\r\n    <div className={styles.menuarea}>\r\n      <PageTabs/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainArea;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport { SUPPORT_STATE } from './shaderSlice';\r\n\r\nexport enum MSG_TYPE {\r\n\tINFO = \"info\",\r\n\tWARNING = \"warning\",\r\n\tERROR = \"error\",\r\n\tSUCCESS = \"success\"\r\n}\r\n\r\ninterface IMessage {\r\n\ttype: MSG_TYPE;\r\n\ttext: string;\r\n\tdate?: number;\r\n}\r\n\r\ninterface LogState {\r\n\tmessages: IMessage[];\r\n}\r\n\r\nlet initMessage = [{\r\n\ttype: MSG_TYPE.INFO,\r\n\ttext: 'Welcome to use WGSL-Toy. Try your first shader program.',\r\n\tdate: Date.now()\r\n}];\r\n\r\nif (!SUPPORT_STATE.WebGPU) {\r\n\tinitMessage.push({\r\n\t\ttype: MSG_TYPE.WARNING,\r\n\t\ttext: 'Your browser does not support WebGPU. You might not be able to use WGSL or GLSL ES4.5. Please use Chrome Canary.',\r\n\t\tdate: Date.now()\r\n\t});\r\n}\r\n\r\nif (!SUPPORT_STATE.WebGL2) {\r\n\tinitMessage.push({\r\n\t\ttype: MSG_TYPE.WARNING,\r\n\t\ttext: 'Your browser does not support WebGL2. You might not be able to use GLSL ES3.5. Please use modern browsers such as Chrome, Firefox, Safari.',\r\n\t\tdate: Date.now()\r\n\t});\r\n}\r\n\r\nif (!SUPPORT_STATE.WebGL) {\r\n\tinitMessage.push({\r\n\t\ttype: MSG_TYPE.WARNING,\r\n\t\ttext: 'Your browser does not support WebGL. You might not be able to use GLSL ES2.0. Please use modern browsers such as Chrome, Firefox, Safari.',\r\n\t\tdate: Date.now()\r\n\t});\r\n}\r\n\r\nconst initialState: LogState = {\r\n\tmessages: initMessage,\r\n};\r\n\r\nexport const logSlice = createSlice({\r\n\tname: 'log',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetMessage: (state, action: PayloadAction<IMessage | IMessage[]>) => {\r\n\t\t\tif (action.payload instanceof Array) {\r\n\t\t\t\tstate.messages = action.payload;\r\n\t\t\t} else {\r\n\t\t\t\tstate.messages = [action.payload];\r\n\t\t\t}\r\n\t\t},\r\n\t\tpushMessage: (state, action: PayloadAction<IMessage | IMessage[]>) => {\r\n\t\t\tlet result = [...state.messages];\r\n\t\t\tif (action.payload instanceof Array) {\r\n\t\t\t\tresult = result.concat(action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(action.payload);\r\n\t\t\t}\r\n\t\t\tstate.messages = result;\r\n\t\t}, \r\n\t},\r\n});\r\n\r\nexport const { setMessage, pushMessage } = logSlice.actions;\r\n\r\nexport const messages = (state: RootState) => state.logInfo.messages;\r\n\r\nexport default logSlice.reducer;\r\n","import React from \"react\";\r\nimport styles from './ConsoleBar.module.css';\r\nimport { StopOutlined } from '@ant-design/icons';\r\nimport IconButton from \"../mainarea/IconButton\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { messages, MSG_TYPE, setMessage } from '../../features/editor/logSlice';\r\n\r\nexport default function ConsoleBar() {\r\n    const dispatch = useDispatch();\r\n    const msgs = useSelector(messages);\r\n    return (<div className={styles.consolebar}>\r\n        <div className={styles.titleline}>\r\n            Log\r\n            <IconButton icon={<StopOutlined/>} style={{\r\n                float: 'right',\r\n            }} onClick={()=> {\r\n                dispatch(setMessage([]));\r\n            }}></IconButton>\r\n        </div>\r\n        <div className={styles.messagebox}>\r\n            {\r\n                msgs.map(msg => {\r\n                    if (msg.type === MSG_TYPE.WARNING) {\r\n                        return <div key={msg.text} className={styles.warning}>{msg.text}</div>\r\n                    }\r\n                    if (msg.type === MSG_TYPE.SUCCESS) {\r\n                        return <div key={msg.text} className={styles.success}>{msg.text}</div>\r\n                    }\r\n                    return <div key={msg.text} className={styles.info}>{msg.text}</div>\r\n                })\r\n            }\r\n        </div>\r\n    </div>);\r\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\n\r\ninterface RuntimeState {\r\n\tfullscreen: boolean;\r\n\tfps: number;\r\n}\r\n\r\nconst initialState: RuntimeState = {\r\n\tfps: 0,\r\n\tfullscreen: false,\r\n};\r\n\r\nexport const runtimeSlice = createSlice({\r\n\tname: 'log',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetFPS: (state, action: PayloadAction<number>) => {\r\n\t\t\tstate.fps = action.payload;\r\n\t\t},\r\n\t\tsetFullscreen: (state, action: PayloadAction<boolean>) => {\r\n\t\t\tstate.fullscreen = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setFPS, setFullscreen } = runtimeSlice.actions;\r\n\r\nexport const fps = (state: RootState) => state.runtime.fps;\r\nexport const fullscreen = (state: RootState) => state.runtime.fullscreen;\r\n\r\nexport default runtimeSlice.reducer;\r\n","export default class F32Buffer {\r\n    constructor(device, data, usage) {\r\n        this.elementSize = data.BYTES_PER_ELEMENT;\r\n        this.gpuBuffer = device.createBuffer({\r\n            size: data.byteLength,\r\n            usage: usage,\r\n            mappedAtCreation: true\r\n        });\r\n        new Float32Array(this.gpuBuffer.getMappedRange()).set(data);\r\n\t    this.gpuBuffer.unmap();\t\r\n    }\r\n}\r\n","const swapChainFormat = \"bgra8unorm\";\r\nconst renderPassDescriptor: GPURenderPassDescriptor = {\r\n    colorAttachments: [\r\n        {\r\n            attachment: null as any,\r\n            loadValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\r\n        },\r\n    ],\r\n};\r\n\r\nexport default class Renderer {\r\n    device: GPUDevice;\r\n    canvas: HTMLCanvasElement;\r\n    context: GPUCanvasContext | null;\r\n    swapChain!: GPUSwapChain;\r\n    format: string = '';\r\n    commandEncoder!: GPUCommandEncoder;\r\n    passEncoder: any;\r\n    constructor(device: GPUDevice, canvas: HTMLCanvasElement) {\r\n        this.device = device;\r\n        this.canvas = canvas;\r\n        this.context = canvas.getContext(\"gpupresent\");\r\n        if (!this.context) {\r\n            return;\r\n        }\r\n        this.swapChain = this.context.configureSwapChain({\r\n            device,\r\n            format: swapChainFormat\r\n        });\r\n        this.format = swapChainFormat;\r\n    }\r\n\r\n    clear() {\r\n        this.commandEncoder = this.device.createCommandEncoder();\r\n        const textureView = this.swapChain.getCurrentTexture().createView();\r\n        (renderPassDescriptor.colorAttachments as any)[0].attachment = textureView;\r\n\r\n        this.passEncoder = this.commandEncoder.beginRenderPass(renderPassDescriptor);\r\n    }\r\n\r\n    end() {\r\n        this.passEncoder.endPass();\r\n\r\n        this.device.queue.submit([this.commandEncoder.finish()]);\r\n    }\r\n\r\n    render(mesh: any, mouseArray: Float32Array) {\r\n        let pipeline = mesh.pipeline || mesh.updatePipeline().pipeline;\r\n        (window as any).p = pipeline;\r\n        this.device.queue.writeBuffer(\r\n            mesh.uniformBuffer,\r\n            0,\r\n            mouseArray.buffer,\r\n            mouseArray.byteOffset,\r\n            mouseArray.byteLength\r\n        );\r\n\r\n        this.passEncoder.setBindGroup(0, mesh.uniformBindGroup);\r\n        this.passEncoder.setPipeline(pipeline);\r\n        for (let i = 0; i < mesh.geometry.nodes.length; i++) {\r\n            this.passEncoder.setVertexBuffer(i, mesh.geometry.nodes[i].buffer.gpuBuffer);\r\n        }\r\n\r\n        this.passEncoder.draw(mesh.geometry.length, 1, 0, 0);\r\n    }\r\n}","let defaultOpt = {\r\n    stride: 2,\r\n    offset: 0,\r\n    format: \"float32x2\"\r\n}\r\n\r\nexport class GeometryNode {\r\n    constructor(buffer, name, options = defaultOpt) {\r\n        this.name = name;\r\n        this.buffer = buffer;\r\n        this.stride = options.stride;\r\n        this.offset = options.offset;\r\n        this.format = options.format;\r\n    }\r\n\r\n    toPipelineBuffer(shaderLocation) {\r\n        return {\r\n            arrayStride: this.stride * this.buffer.elementSize,\r\n            attributes:[{\r\n                shaderLocation: shaderLocation,\r\n                offset: this.offset,\r\n                format: this.format\r\n            }]\r\n        }\r\n    }\r\n}\r\n\r\nexport class Geometry {\r\n    constructor(type, length, nodes = []) {\r\n        this.type = type; // 拓扑类型\r\n        this.length = length; // 顶点数据数量长度\r\n        this.nodes = nodes;\r\n    }\r\n}","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport shaderReducer from '../features/editor/shaderSlice';\r\nimport logReducer from '../features/editor/logSlice';\r\nimport runtimeReducer from '../features/editor/runtimeSlice';\r\nimport tabReducer from '../features/editor/tabSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    shader: shaderReducer,\r\n    logInfo: logReducer,\r\n    runtime: runtimeReducer,\r\n    tabs: tabReducer\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import {setMessage, MSG_TYPE} from '../features/editor/logSlice';\r\nimport {store} from './../app/store';\r\n\r\nfunction getWgslModule(device, source) {\r\n    // store.dispatch(setNeedUpdate(false));\r\n    let startTime = Date.now();\r\n    device.pushErrorScope('validation');\r\n    const shaderModule = device.createShaderModule({\r\n        code: source,\r\n    });\r\n\r\n    device.popErrorScope().then(err => {\r\n        if (err) {\r\n            store.dispatch(setMessage({\r\n                type: MSG_TYPE.ERROR,\r\n                text: err.message,\r\n                date: Date.now()\r\n            }));\r\n        } else {\r\n            let time = Date.now() - startTime;\r\n            store.dispatch(setMessage([{\r\n                type: MSG_TYPE.SUCCESS,\r\n                text: 'Shader compiled successfully.',\r\n                date: Date.now()\r\n            }, {\r\n                type: MSG_TYPE.SUCCESS,\r\n                text: `Compiled in ${time} ms.`,\r\n                date: Date.now()\r\n            }]));\r\n        }\r\n    });\r\n\r\n    return shaderModule;\r\n}\r\n\r\nfunction getGlslModule(device, source, glslang) {\r\n    let startTime = Date.now();\r\n    device.pushErrorScope('validation');\r\n    let binCode;\r\n\r\n    try {\r\n        binCode = glslang.compileGLSL(source, 'fragment')\r\n    } catch (e) {\r\n        store.dispatch(setMessage({\r\n            type: MSG_TYPE.ERROR,\r\n            text: e.message,\r\n            date: Date.now()\r\n        }));\r\n        return;\r\n    }\r\n\r\n    const shaderModule = device.createShaderModule({\r\n        code: binCode,\r\n    });\r\n\r\n    device.popErrorScope().then(err => {\r\n        if (err) {\r\n            store.dispatch(setMessage({\r\n                type: MSG_TYPE.ERROR,\r\n                text: err.message,\r\n                date: Date.now()\r\n            }));\r\n        } else {\r\n            let time = Date.now() - startTime;\r\n            store.dispatch(setMessage([{\r\n                type: MSG_TYPE.SUCCESS,\r\n                text: 'Shader compiled successfully.',\r\n                date: Date.now()\r\n            }, {\r\n                type: MSG_TYPE.SUCCESS,\r\n                text: `Compiled in ${time} ms.`,\r\n                date: Date.now()\r\n            }]));\r\n        }\r\n    });\r\n\r\n    return shaderModule;\r\n}\r\n\r\nexport default class Material {\r\n    constructor(device, vs, fs, glslang) {\r\n        this.glslang = glslang;\r\n        this.vs = vs;\r\n        this.fs = fs;\r\n        this.device = device;\r\n        this.vertexStage = {\r\n            module: device.createShaderModule({\r\n                code: vs,\r\n            }),\r\n            entryPoint: \"main\",\r\n        };\r\n        this.fragmentStage = {\r\n            module: getWgslModule(device, fs),\r\n            entryPoint: \"main\"\r\n        };\r\n    }\r\n\r\n    changeFS(fs, isGlsl = false) {\r\n        this.fs = fs;\r\n        let module = isGlsl ? getGlslModule(this.device, fs, this.glslang) : getWgslModule(this.device, fs);\r\n        if (module) {\r\n            this.fragmentStage = {\r\n                module, \r\n                entryPoint: \"main\"\r\n            };\r\n        }\r\n    }\r\n} ","export default class Mesh {\r\n    constructor(device, geo, material) {\r\n        this.device = device;\r\n        this.geometry = geo;\r\n        this.material = material;\r\n        this.pipeline = null;\r\n\r\n        this.createUniform();\r\n    }\r\n\r\n    createUniform() {\r\n\r\n        // mouse\r\n        this.uniformBuffer = this.device.createBuffer({\r\n            size: 20,\r\n            usage: window.GPUBufferUsage.UNIFORM | window.GPUBufferUsage.COPY_DST,\r\n        });\r\n\r\n        this.bindGroupLayout = this.device.createBindGroupLayout({\r\n            entries: [\r\n                {\r\n                    // mouse\r\n                    binding: 0,\r\n                    visibility: window.GPUShaderStage.FRAGMENT,\r\n                    type: 'uniform-buffer',\r\n                },\r\n                // {\r\n                //     // Sampler\r\n                //     binding: 1,\r\n                //     visibility: GPUShaderStage.FRAGMENT,\r\n                //     type: 'sampler',\r\n                // },\r\n                // {\r\n                //     // Texture view\r\n                //     binding: 2,\r\n                //     visibility: GPUShaderStage.FRAGMENT,\r\n                //     type: 'sampled-texture',\r\n                // },\r\n            ],\r\n        });\r\n    }\r\n\r\n    updatePipeline() {\r\n        let vbufferConfig = [];\r\n        for (let i = 0; i < this.geometry.nodes.length; i++) {\r\n            vbufferConfig.push(this.geometry.nodes[i].toPipelineBuffer(i))\r\n        }\r\n        this.pipelineLayout = this.device.createPipelineLayout({\r\n            bindGroupLayouts: [this.bindGroupLayout],\r\n        });\r\n\r\n        this.pipeline = this.device.createRenderPipeline({\r\n            layout: this.pipelineLayout,\r\n            vertexStage: this.material.vertexStage,\r\n            fragmentStage: this.material.fragmentStage,\r\n            primitiveTopology: this.geometry.type,\r\n            colorStates: [\r\n                {\r\n                    format: \"bgra8unorm\"\r\n                }\r\n            ],\r\n            vertexState: {\r\n                vertexBuffers: vbufferConfig\r\n            }\r\n        });\r\n\r\n        window.mesh = this;\r\n\r\n        this.uniformBindGroup = this.device.createBindGroup({\r\n            layout: this.pipeline.getBindGroupLayout(0),\r\n            entries: [\r\n                {\r\n                    binding: 0,\r\n                    resource: {\r\n                        buffer: this.uniformBuffer,\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n        return this;\r\n    }\r\n}","export interface Glslang {\r\n    compileGLSL(\r\n        glsl: string,\r\n        type: 'vertex' | 'fragment' | 'compute'\r\n    ): Uint32Array;\r\n}\r\n\r\nlet glslang: Glslang | undefined = undefined;\r\nexport default async function getGlslang(): Promise<Glslang> {\r\n    if (glslang !== undefined) return glslang;\r\n    const glslangModule = await import(\r\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n      // @ts-ignore\r\n      /* webpackIgnore: true */ 'https://unpkg.com/@webgpu/glslang@0.0.15/dist/web-devel/glslang.js'\r\n    );\r\n    glslang = await glslangModule.default();\r\n    return glslang as Glslang;\r\n}","import React from \"react\";\r\nimport { IRenderingAreaProps } from \"./IRenderingArea\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { codeNeedUpdate, currentCode, currentShaderType, setNeedUpdate, ShaderType } from \"../../features/editor/shaderSlice\";\r\n\r\nimport F32Buffer from \"../../engine/buffer.js\";\r\nimport Renderer from \"../../engine/renderer\";\r\nimport { GeometryNode, Geometry } from \"../../engine/geometry.js\";\r\nimport Material from \"../../engine/material.js\";\r\nimport Mesh from \"../../engine/mesh.js\";\r\nimport glslangModule from '../../engine/glsllang';\r\nimport getDefaultCode from \"../../features/common/defaultCode\";\r\nimport { store } from \"../../app/store\";\r\nimport { setFPS } from \"../../features/editor/runtimeSlice\";\r\n\r\nexport default function RenderingAreaWebGpu(props: IRenderingAreaProps) {\r\n    const shaderType = useSelector(currentShaderType);\r\n    const codes = useSelector(currentCode);\r\n    const needUpdate = useSelector(codeNeedUpdate);\r\n    const dispatch = useDispatch();\r\n    if (codes && (shaderType === ShaderType.WGSL || shaderType === ShaderType.ES45) && needUpdate) {\r\n        updateMaterialShader(codes, shaderType === ShaderType.ES45);\r\n        dispatch(setNeedUpdate(false));\r\n    }\r\n    return <canvas id={props.id} width={props.width} height={props.height} style={{\r\n        display: (shaderType === ShaderType.WGSL || shaderType === ShaderType.ES45) ? 'auto' : 'none',\r\n    }}></canvas>;\r\n}\r\n\r\n\r\nlet f32BufferArray = new Float32Array([0, 0, 0, 0, 0]);\r\n\r\nexport { f32BufferArray };\r\n\r\nlet material: Material;\r\nlet mesh: Mesh;\r\nlet lastTime = performance.now();\r\nlet deltaTime = 0;\r\n\r\nexport async function init(canvas: any) {\r\n    const glslang = await glslangModule();\r\n    const adapter = await navigator.gpu?.requestAdapter();\r\n    if (!adapter) {\r\n        return () => {};\r\n    }\r\n    const device = await adapter.requestDevice();\r\n    if (!device) {\r\n        return () => {};\r\n    }\r\n    const renderer = new Renderer(device, canvas);\r\n\r\n    // 顶点位置数据\r\n    const verticesData = new Float32Array([\r\n        -1, 1,\r\n        -1, -1,\r\n        1, -1,\r\n        -1, 1,\r\n        1, -1,\r\n        1, 1,\r\n    ]);\r\n    const verticesBuffer = new F32Buffer(device, verticesData, GPUBufferUsage.VERTEX);\r\n    const vnode = new GeometryNode(verticesBuffer, 'vertices', {\r\n        stride: 2,\r\n        offset: 0,\r\n        format: 'float32x2'\r\n    })\r\n\r\n    material = new Material(device, wgslShaders.vertex, getDefaultCode(ShaderType.WGSL), glslang);\r\n    const geo = new Geometry(\"triangle-list\", 6, [vnode]);\r\n    mesh = new Mesh(device, geo, material);\r\n\r\n    function frame() {\r\n        renderer.clear();\r\n        f32BufferArray[4] = performance.now() / 1000;\r\n        renderer.render(mesh, f32BufferArray);\r\n        renderer.end();\r\n        deltaTime = performance.now() - lastTime;\r\n        lastTime = performance.now();\r\n        fIndex = requestAnimationFrame(frame);\r\n        return fIndex;\r\n    }\r\n\r\n    setInterval(() => {\r\n        store.dispatch(setFPS(1000 / deltaTime))\r\n    }, 1000)\r\n\r\n    return frame;\r\n}\r\n\r\nexport const wgslShaders = {\r\n    vertex: `[[builtin(position)]] var<out> out_position : vec4<f32>;\r\n[[location(0)]] var<in> a_position : vec2<f32>;\r\n[[location(0)]] var<out> fragCoord : vec2<f32>;\r\n[[stage(vertex)]]\r\nfn main() -> void {\r\n\tout_position = vec4<f32>(a_position, 0.0, 1.0);\r\n    fragCoord = a_position;\r\n\treturn;\r\n}\r\n`};\r\n\r\nexport const glsl45Shaders = {\r\n    fragment: ``\r\n};\r\n\r\nlet fff: any, fIndex: any;\r\n\r\nexport function renderCanvasMouseMove(event: any) {\r\n    f32BufferArray[0] = event.offsetX;\r\n    f32BufferArray[1] = event.offsetY;\r\n}\r\n\r\nexport function updateMaterialShader(code: string = '', isGlsl = false) {\r\n    if (material) {\r\n        material.changeFS(code, isGlsl);\r\n        mesh.updatePipeline();\r\n        cancelAnimationFrame(fIndex);\r\n        fIndex = fff();\r\n    }\r\n}\r\n\r\nlet hasCanvas = setInterval(() => {\r\n    let canvas = document.getElementById(\"webgpuTarget\");\r\n    if (canvas) {\r\n        canvas.addEventListener('mousemove', renderCanvasMouseMove);\r\n        clearInterval(hasCanvas);\r\n        init(canvas).then(frame => {\r\n            fff = frame;\r\n            frame?.();\r\n        });\r\n    }\r\n}, 100);\r\n","import React from 'react';\r\nimport styles from './RightSide.module.css';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport { FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport IconButton from '../mainarea/IconButton';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fps, fullscreen, setFullscreen } from '../../features/editor/runtimeSlice';\r\nimport { currentShaderType, ShaderType } from '../../features/editor/shaderSlice';\r\nimport RenderingAreaWebGPU, { f32BufferArray } from './RenderingAreaWebGPU';\r\n\r\n\r\ninterface IRightProps {\r\n  width?: number;\r\n}\r\n\r\nfunction RightSide(props: IRightProps) {\r\n  const dispatch = useDispatch();\r\n  const fpsInfo = useSelector(fps);\r\n  const shaderType = useSelector(currentShaderType);\r\n  const isFullscreen = useSelector(fullscreen);\r\n  const { width, height, ref } = useResizeDetector();\r\n  f32BufferArray[2] = width || 0;\r\n  f32BufferArray[3] = height || 0;\r\n  return (\r\n    <div className={styles.rightside} ref={ref as any}>\r\n      <RenderingAreaWebGPU id=\"webgpuTarget\" width={width} height={height}/>\r\n      <canvas id=\"webgl2Target\" width={width} height={height} style={{\r\n        display: shaderType === ShaderType.ES30 ? 'auto' : 'none',\r\n      }}></canvas>\r\n      <canvas id=\"webglTarget\" width={width} height={height} style={{\r\n        display: shaderType === ShaderType.ES20 ? 'auto' : 'none',\r\n      }}></canvas>\r\n      <div className={styles.toolbar}>\r\n        <span className={styles.sizetext}>{width}×{height}</span>\r\n        <span className={styles.sizetext}>{fpsInfo.toFixed(2)}fps</span>\r\n        <IconButton icon={isFullscreen ? <FullscreenExitOutlined /> : <FullscreenOutlined />} onClick={() => {\r\n          if (isFullscreen) {\r\n            document.exitFullscreen();\r\n            dispatch(setFullscreen(false));\r\n          } else {\r\n            (ref.current as any)?.requestFullscreen();\r\n            dispatch(setFullscreen(true));\r\n          }\r\n        }}></IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RightSide;\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\n// import { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport Sidebar from './framework/sidebar/Sidebar';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport 'react-splitter-layout/lib/index.css';\r\nimport MenuArea from './framework/menuarea/MenuArea';\r\nimport MainArea from './framework/mainarea/MainArea';\r\nimport ConsoleBar from './framework/ConsoleBar/ConsoleBar';\r\nimport RightSide from './framework/rightside/RightSide';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <SplitterLayout primaryIndex={1} secondaryInitialSize={250}>\r\n      <div style={{\r\n        display: 'flex',\r\n        height: '100vh'\r\n      }}>\r\n        <Sidebar />\r\n        <MenuArea />\r\n      </div>\r\n      <SplitterLayout secondaryInitialSize={250}>\r\n        <SplitterLayout vertical secondaryInitialSize={250}>\r\n          <div style={{\r\n            height: '100%',\r\n            overflow: 'hidden'\r\n          }}>\r\n            <MainArea />\r\n          </div>\r\n          <ConsoleBar />\r\n        </SplitterLayout>\r\n        <RightSide/>\r\n      </SplitterLayout>\r\n    </SplitterLayout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consolebar\":\"ConsoleBar_consolebar__V-B47\",\"titleline\":\"ConsoleBar_titleline__2cLTU\",\"messagebox\":\"ConsoleBar_messagebox__Zz3OW\",\"warning\":\"ConsoleBar_warning__1Oejt\",\"success\":\"ConsoleBar_success__X0igC\",\"error\":\"ConsoleBar_error__2qqR8\",\"info\":\"ConsoleBar_info__QL1rJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightside\":\"RightSide_rightside__1vr7N\",\"toolbar\":\"RightSide_toolbar__36RvB\",\"sizetext\":\"RightSide_sizetext__3AIAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__qe8Sq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconbutton\":\"IconButton_iconbutton__1mzQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuarea\":\"MenuArea_menuarea__-SQvI\"};"],"sourceRoot":""}